<project name="nuxeo-assembly"
         default="build"
         xmlns:nx="urn:nuxeo-build"
         xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml"
           uri="urn:nuxeo-artifact" />

  <target name="init" unless="init.done">
    <tstamp />
    <condition property="build.ep">
      <or>
        <isset property="maven.profile.nuxeo-cap" />
        <isset property="maven.profile.all" />
        <isset property="maven.profile.all-distributions" />
      </or>
    </condition>
    <property name="outdir" value="${maven.project.build.directory}" />
    <antcall target="expand" />
    <property name="init.done" value="true" />
  </target>

  <target name="expand" unless="no.build">
    <artifact:nuxeo-expand />
  </target>

  <target name="build" depends="init" unless="no.build">
    <echo>Building Tomcat standard distribution...</echo>
    <property name="tomcat" value="${outdir}/tomcat.tmp" />
    <antcall target="prepare-tomcat" />
    <artifact:attach file="pom.xml"
                     target="${maven.project.groupId}:${maven.project.artifactId}"
                     type="pom" />
    <antcall target="build-nuxeo-cap" />
    <delete dir="${tomcat}" failonerror="false" />
  </target>

  <target name="prepare-tomcat">
    <unzip dest="${outdir}">
      <artifact:resolveFile key="org.apache.tomcat:apache-tomcat:6.0.20:zip"
                            classifier="light" />
    </unzip>
    <move todir="${tomcat}">
      <fileset dir="${outdir}/apache-tomcat-6.0.20" />
    </move>
    <unzip dest="${tomcat}">
      <artifact:resolveFile key="org.nuxeo.ecm.distribution:nuxeo-distribution-resources:${nuxeo.distribution.version}:zip"
                            classifier="doc" />
    </unzip>
    <copy todir="${tomcat}">
      <fileset dir="src/main/resources" />
    </copy>
    <unzip dest="${tomcat}/bin">
      <artifact:resolveFile key="org.nuxeo.ecm.distribution:nuxeo-distribution-resources:${nuxeo.distribution.version}:zip"
                            classifier="bin" />
    </unzip>
    <chmod dir="${tomcat}/bin" perm="ug+x" includes="*.sh,*ctl,*.command" />

    <!-- Remove non-nuxeo information files from root
    <mkdir dir="${tomcat}/doc-tomcat" />
    <move todir="${tomcat}/doc-tomcat">
      <fileset dir="${tomcat}">
        <include name="LICENSE" />
        <include name="NOTICE" />
        <include name="RELEASE-NOTES" />
        <include name="RUNNING.txt" />
      </fileset>
    </move>
          <exclude name="**/webapps/examples/**" />
          <exclude name="**/webapps/docs/**" />
          <exclude name="**/bin/*.bat" />
          <exclude name="**/bin/*.exe" />
          <exclude name="**/bin/*.sh" />
          <exclude name="**/bin/*.tar.gz" />
          <exclude name="**/conf/logging.properties" />
          <exclude name="**/conf/server.xml" />
          <exclude name="**/logs" />
      -->

    <unzip dest="${tomcat}/templates" overwrite="true">
      <artifact:resolveFile key="org.nuxeo.ecm.distribution:nuxeo-distribution-resources:${nuxeo.distribution.version}:zip"
                            classifier="templates-common" />
      <artifact:resolveFile key="org.nuxeo.ecm.distribution:nuxeo-distribution-resources:${nuxeo.distribution.version}:zip"
                            classifier="templates-tomcat" />
    </unzip>

    <copy todir="${tomcat}/lib">
      <artifact:resolveFile key="org.nuxeo.runtime:nuxeo-runtime-tomcat-adapter:${nuxeo.runtime.version}:jar" />
      <!-- copy jdbc drivers -->
      <artifact:resolveFile key="mysql:mysql-connector-java:5.1.6" />
    </copy>
  </target>

  <target name="build-nuxeo-cap"
          if="build.ep"
          description="Build Tomcat distribution with Nuxeo CAP">
    <property name="distribution.dir"
              value="${outdir}/nuxeo-cap-${maven.project.version}-tomcat" />
    <delete failonerror="false" dir="${distribution.dir}" />
    <copy todir="${distribution.dir}">
      <fileset dir="${tomcat}" />
    </copy>
    <chmod dir="${distribution.dir}/bin"
           perm="ug+x"
           includes="*.sh,*ctl,*.command" />

    <!-- Nuxeo CAP -->
    <unzip dest="${distribution.dir}/nxserver">
      <artifact:resolveFile key="org.nuxeo.ecm.distribution:nuxeo-distribution-cap:${nuxeo.distribution.version}:zip" />
    </unzip>

    <antcall target="reorganize-libs">
      <param name="distribution.dir" value="${distribution.dir}" />
    </antcall>

    <antcall target="set-distribution-properties">
      <param name="distribution.properties.file"
             value="${distribution.dir}/templates/common/config/distribution.properties" />
      <param name="org.nuxeo.distribution.name" value="cap" />
      <param name="org.nuxeo.distribution.server" value="tomcat" />
      <param name="org.nuxeo.distribution.version"
             value="${maven.project.version}" />
      <param name="org.nuxeo.distribution.date" value="${DSTAMP}${TSTAMP}" />
    </antcall>
    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-nuxeo-cap.zip"
         basedir="${outdir}"
         includes="nuxeo-cap-${maven.project.version}-tomcat/**" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-nuxeo-cap.zip"
                     target="${maven.project.groupId}:${maven.project.artifactId}"
                     classifier="nuxeo-cap"
                     type="zip" />
  </target>


  <target name="reorganize-libs">
    <!-- Add Tomcat specific requirements -->
    <copy todir="${distribution.dir}/nxserver/bundles" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="org.nuxeo*" />
        </includes>
      </artifact:set>
    </copy>
    <copy todir="${distribution.dir}/nxserver/lib" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="!org.nuxeo*" />
        </includes>
        <excludes>
          <artifact artifactId="h2" />
        </excludes>
      </artifact:set>
    </copy>

    <!-- Remove duplicates -->
    <nx:rmdups dir="${distribution.dir}/nxserver/lib" />

    <!-- remove libraries already provided by Tomcat or unneeded -->
    <delete>
      <fileset dir="${distribution.dir}/nxserver/bundles">
        <include name="nuxeo-runtime-jetty-*" />
        <include name="nuxeo-platform-login-jboss*" />
        <include name="nuxeo-platform-auth-web-jboss*" />
        <include name="nuxeo*facade*" />
      </fileset>
      <fileset dir="${distribution.dir}/nxserver/lib">
        <include name="jboss-seam-debug*" />
        <include name="jboss-system*" />
        <include name="jbosssx*" />
        <exclude name="jboss-common-core*" />
        <include name="jboss-common*" />
        <include name="jboss-jmx*" />
        <include name="jboss-cache-jdk50*" />
        <include name="jbossall-client*" />
        <include name="core-*" />
        <!-- jetty is needed by vcs remote -->
        <!-- jetty-util is needed by jsp impl jar - which is referring jetty log classes -->
        <!-- jetty-naming has jndi properties conflicting with Tomcat -->
        <include name="jetty-naming*" />
        <include name="jsp-api*" />
        <include name="servlet-api-*" />
        <include name="el-api*" />
        <include name="jsp-*" />
        <include name="catalina-*" />
        <include name="juel-api-*" />
        <include name="hibernate-3.2.6.ga*" />
        <!--
          org.jbpm.jbpm3:jbpm-jpdl:3.3.0.GA:jar:
          |- bsh:bsh:1.3.0:jar:
             |- commons-logging:commons-logging:1.1.1:jar:
                |- org.hibernate:hibernate:3.2.6.ga:jar:
        -->
      </fileset>
    </delete>

    <!-- Move some libraries from nxserver to Tomcat default lib directory -->
    <move todir="${distribution.dir}/lib">
      <fileset dir="${distribution.dir}/nxserver/lib">
        <include name="log4j-*" />
        <include name="lucene-*" />
        <include name="commons-logging-*" />
        <include name="commons-lang-*" />
        <include name="freemarker-*" />
        <include name="mail-*" />
      </fileset>
      <fileset dir="${distribution.dir}/nxserver/bundles">
        <include name="nuxeo-core-storage-sql-extensions-*" />
        <include name="nuxeo-generic-wss-handler-*" />
      </fileset>
    </move>
  </target>

  <target name="set-distribution-properties">
    <echo append="false" file="${distribution.properties.file}">
## DO NOT MANUALLY EDIT THIS FILE
org.nuxeo.distribution.name=${org.nuxeo.distribution.name}
org.nuxeo.distribution.server=${org.nuxeo.distribution.server}
org.nuxeo.distribution.version=${org.nuxeo.distribution.version}
org.nuxeo.distribution.date=${org.nuxeo.distribution.date}
    </echo>
  </target>

</project>
