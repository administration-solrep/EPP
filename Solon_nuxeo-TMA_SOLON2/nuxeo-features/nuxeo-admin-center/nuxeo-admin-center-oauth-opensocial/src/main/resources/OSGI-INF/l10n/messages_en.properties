admcommand.OAuthOpensocial = OAuth / OpenSocial
tab.oauth.serverkey = Server Keys
tab.oauth.providers = Service providers
tab.oauth.consumers = Consumers
tab.oauth.externalGadgets = External Gadgets
tab.oauth.grantedTokenSP = Service providers Tokens
tab.oauth.grantedTokenConsumers = Consumers Tokens

adminsubtab.oauth.consumers = Service consumers
adminsubtab.oauth.consumersTokens = Tokens granted by Nuxeo to Service consumers
adminsubtab.oauth.providers = Service providers
adminsubtab.oauth.providersTokens = Tokens granted by Service providers to Nuxeo

adminsubtab.oauth.serverKey = Nuxeo Server OAuth keys
adminsubtab.oauth.externalGadgets = External gadgets management

label.oauth.help.consumerKey = ConsumerKey identifying the consumer
label.oauth.help.consumerSecret = HMAC secret used by the consumer to sign the requests (HMAC mode)
label.oauth.help.publicKey = RSA public key used by the consumer to sign the request (RSA mode)
label.oauth.help.enabled = Consumer will be able to access Nuxeo only if enabled flag is set.
label.oauth.help.description = Small description of the consumer
label.oauth.help.signedFetchSupport = Defines if consumer can use signed fetch (2 legged OAuth) to access Nuxeo.
label.oauth.help.callbackURL = Callback url if not defined by the widget

label.signedfetch.none = Not allowed (i.e. : only support 3 legged)
label.signedfetch.opensocialViewer = Supported (use OpenSocial Viewer Id as Login)
label.signedfetch.opensocialOwner = Supported (use OpenSocial Owner Id as Login)
label.signedfetch.dedicatedUser = Supported (use dedicated Nuxeo user)
label.signedfetch.dedicatedUser.login = Nuxeo login to use

title.create.consumer.entry = Add new Consumer



