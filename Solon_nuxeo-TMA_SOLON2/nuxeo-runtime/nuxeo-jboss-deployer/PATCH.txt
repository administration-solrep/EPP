TODO: see ScanningMetaDataDeployer to code a dynamic scanning deployer. - see AnnotationEnvironmentDeployer / OptAnnotationMetaDataDeployer for anno scanning
see: DefaultSecurityManagement, JBossSecurityContext for security

<bean name="Ejb3Deployer" class="org.jboss.ejb3.deployers.Ejb3Deployer">
<property name="deploymentDescriptorRequired">true</property>
from false to true to avoid scanning non ejb3 jars

Modified JBoss config as following:

in file deployers/jboss-jca.deployer/META-INF/jca-deployers-jboss-beans.xml
added property:
      <property name="allowMultipleFiles">true</property>
otherwise -ds.xml files are not deployed

   <!-- The *-ds.xml parsing deployer -->
   <bean name="ManagedConnectionFactoryParserDeployer" class="org.jboss.resource.deployers.ManagedConnectionFactoryParserDeployer">
      <install bean="ManagedDeploymentCreator" method="addAttachmentType">
         <parameter>
            <value>org.jboss.resource.metadata.mcf.ManagedConnectionFactoryDeploymentGroup</value>
         </parameter>
         <parameter>
            <value>jca-ds</value>
         </parameter>
      </install>
      <uninstall bean="ManagedDeploymentCreator" method="removeAttachmentType">
         <parameter>
            <value>org.jboss.resource.metadata.mcf.ManagedConnectionFactoryDeploymentGroup</value>
         </parameter>
      </uninstall>
      <property name="allowMultipleFiles">true</property>
      <property name="repository"><inject bean="JCAMetaDataRepository"/></property>
      <property name="suffix">-ds.xml</property>
   </bean>

   
 =====
 
Notes:

https://jira.jboss.org/browse/EJBTHREE-1969
https://jira.jboss.org/browse/JBPAPP-2934
https://jira.jboss.org/browse/JBAS-7004



Why the nuxeo install directory must have an extension in order to be deployed:
--------------

In AbstractVFSProfileSource this is scanning deployable artifacts:
(because of this nxserver should have an extension.


/**
    * Scan a given virtualFile for deployments.
    *
    * @param list a list of virtual files, where new deployments are added to
    * @param component the root file
    * @throws IOException
    * @throws URISyntaxException
    */
   protected void addedDeployment(List<VirtualFile> list, VirtualFile component) throws IOException, URISyntaxException
   {
      // Excluding files from scanning
      if(deploymentFilter != null && this.deploymentFilter.accepts(component) == false)
      {
         if(log.isTraceEnabled())
            log.trace("ignoring "+ component);
         return;
      }

      // Check if we accept this deployment
      String key = component.toURI().toString();
      if(acceptsDeployment(key) == false)
         return;

      // If it's a directory or exploded deployment
      if(component.isLeaf() == false && component.isArchive() == false)
      {
         // Check the name
         if(isRecursiveScan() && component.getName().indexOf('.') == -1)
         {
            // recurse if not '.' in name and recursive search is enabled
            addedDeployments(list, component);
         }
         else
         {
            list.add(component);
         }
      }
      else
      {
         list.add(component);
      }
   }
 
 
 
 =======================
 
 Stuff to modify:
 
 1. need to use java:NXRepository for the lookup .. - this is only if not using ejb... (LocalSession)
 in LocalSession
     protected Repository lookupRepository(String name) throws Exception {
        try {
            // needed by glassfish
            return (Repository) new InitialContext().lookup("java:NXRepository/"
                    + name);
        } catch (NamingException e) {
            return NXCore.getRepositoryService().getRepositoryManager().getRepository(
                    name);
        }
    }
 
 