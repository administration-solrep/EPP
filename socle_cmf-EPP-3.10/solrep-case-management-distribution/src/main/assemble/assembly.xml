<project name="nuxeo-assembly" default="build" xmlns:nx="urn:nuxeo-build"
  xmlns:artifact="urn:nuxeo-artifact">

  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml"
    uri="urn:nuxeo-artifact" />

  <filterset id="filter-resources">
    <filter token="nuxeo.core.version" value="${nuxeo.core.version}" />
  </filterset>

  <target name="init" unless="init.done">
    <tstamp/> 
    <property name="outdir" value="${maven.project.build.directory}" />
    <property name="stagedir" value="${outdir}/stage" />
    <property name="finaltarget" value="../target" />
    <property name="init.done" value="true" />
    <antcall target="expand" />
  </target>

  <target name="init-cmf">
    <artifact:set groupId="org.nuxeo.cm" type="jar" id="application-jars"/>
    <fileset id="distribution-templates" dir="src/main/resources" excludes="correspondence/,nuxeo-defaults/,cmf-funkload/" />
  </target>

  <target name="init-corr">
    <artifact:set id="application-jars-corr">
      <includes>
        <artifact groupId="org.nuxeo.cm" type="jar"/>
        <artifact groupId="org.nuxeo.correspondence" type="jar"/>
      </includes>
    </artifact:set>
    <fileset id="distribution-templates-corr" dir="src/main/resources" excludes="nuxeo-defaults/,cmf-funkload/"/>
  </target>
  
  <target name="init-cmf-funkload">
    <artifact:set groupId="org.nuxeo.cm" type="jar" id="application-jars"/>
    <fileset id="distribution-templates-cmf-funkload" dir="src/main/resources" excludes="correspondence/,nuxeo-defaults/" />
  </target>

  <target name="update-cmf-defaults">
    <echo file="${app.path}/templates/cmf/nuxeo.defaults" append="yes" message="${line.separator}cmf.target=${deploy.dir}${line.separator}" /> 
    <concat destfile="${app.path}/templates/cmf/nuxeo.defaults" append="yes"> 
      <fileset file="src/main/resources/nuxeo-defaults/cmf.txt" />
    </concat>
    <concat destfile="${app.path}/bin/nuxeo.conf" append="yes"> 
      <fileset file="src/main/resources/nuxeo-defaults/cmf.txt" />
    </concat>
  </target>

  <target name="update-cmf-funkload-defaults">
    <echo file="${app.path}/templates/cmf/nuxeo.defaults" append="yes" message="${line.separator}cmf.target=${deploy.dir}${line.separator}" /> 
   <echo file="${app.path}/templates/cmf-funkload/nuxeo.defaults" append="yes" message="${line.separator}cmf-funkload.target=${deploy.dir}${line.separator}" /> 
    <concat destfile="${app.path}/templates/cmf/nuxeo.defaults" append="yes"> 
      <fileset file="src/main/resources/nuxeo-defaults/cmf.txt" />
    </concat>    
    <concat destfile="${app.path}/templates/cmf-funkload/nuxeo.defaults" append="yes"> 
      <fileset file="src/main/resources/nuxeo-defaults/cmf.txt" />
    </concat>
    <concat destfile="${app.path}/bin/nuxeo.conf" append="yes"> 
      <fileset file="src/main/resources/nuxeo-defaults/cmf.txt" />
    </concat>
  </target>

  <target name="update-corr-defaults">
    <echo file="${app.path}/templates/cmf/nuxeo.defaults" append="yes" message="${line.separator}cmf.target=${deploy.dir}${line.separator}" /> 
    <echo file="${app.path}/templates/correspondence/nuxeo.defaults" append="yes" message="${line.separator}correspondence.target=${deploy.dir}${line.separator}" /> 
    <concat destfile="${app.path}/templates/cmf/nuxeo.defaults" append="yes"> 
      <fileset file="src/main/resources/nuxeo-defaults/cmf.txt" />
    </concat>
    <concat destfile="${app.path}/bin/nuxeo.conf" append="yes"> 
      <fileset file="src/main/resources/nuxeo-defaults/cmf.txt" />
    </concat>
    <concat destfile="${app.path}/templates/correspondence/nuxeo.defaults" append="yes"> 
      <fileset file="src/main/resources/nuxeo-defaults/corr.txt" />
    </concat>
    <concat destfile="${app.path}/bin/nuxeo.conf" append="yes"> 
      <fileset file="src/main/resources/nuxeo-defaults/corr.txt" />
    </concat>
  </target>


  <target name="build">
    <antcall target="cleanoutput" />
    <antcall target="server" />
  </target>

  <target name="set-distribution-properties"> 
    <echo append="false" file="${distribution.properties.file}"> 
## DO NOT MANUALLY EDIT THIS FILE 
org.nuxeo.distribution.name=${org.nuxeo.distribution.name} 
org.nuxeo.distribution.server=${org.nuxeo.distribution.server} 
org.nuxeo.distribution.version=${org.nuxeo.distribution.version} 
org.nuxeo.distribution.date=${org.nuxeo.distribution.date} 
    </echo> 
  </target> 

  <target name="expand" unless="no.build">
    <artifact:expand depth="3" />
  </target>

  <target name="cleanoutput">
    <delete dir="${finaltarget}" />
  </target>

  <target name="build-server" description="Server packaging">
    <echo>nuxeo-cm-distribution server build ${build.distrib}...</echo>
    <delete dir="${stagedir}" />
    <mkdir dir="${stagedir}" />
    <unzip dest="${stagedir}">
      <artifact:resolveFile key="${distrib.key}"
                            classifier="${distrib.classifier}" />
      <patternset>
        <exclude name="**/templates/common-sfsl/**" />
        <exclude name="**/templates/stateful/**" />
        <exclude name="**/templates/stateless/**" />
      </patternset>
    </unzip>
    <nx:rename from="${stagedir}/nuxeo-*" to="${app.path}" />
    <chmod dir="${app.path}" perm="750" includes="*.sh,bin/*.sh,bin/nuxeoctl" />

    <!-- Suppression du log4j d'origine -->
    <delete failonerror="true" verbose="true">
        <fileset dir="${app.path}/nxserver/lib" includes="log4j-*" />
    </delete>
    <delete failonerror="true" verbose="true">
        <fileset dir="${app.path}/lib" includes="log4j-*" />
    </delete>
    <!-- Et remplacement par la 1.2.17 (pour le EnhancedPatternLayout) -->
    <copy todir="${app.path}/lib">
        <artifact:resolveFile key="log4j:log4j:1.2.17" />
    </copy>

    <!-- remove open social -->
    <delete failonerror="false" verbose="true">
      <fileset dir="${bundles.dir}"
        includes="nuxeo-opensocial-*"/> 
      <fileset dir="${bundles.dir}"
         includes="nuxeo-spaces-*"/>
      <fileset dir="${bundles.dir}"
         includes="nuxeo-webengine-gadgets-*"/>
      <fileset dir="${app.path}/templates/common/config"
        includes="opensocial.properties default-opensocial-config.xml" />
    </delete>
    <!-- Deploy Custom plugins -->
    <copy todir="${plugins.dir}">
      <artifact:set groupId="org.nuxeo.ecm.platform" artifactId="nuxeo-classification-*"/>
      <artifact:set groupId="org.nuxeo.ecm.platform" artifactId="nuxeo-platform-importer-core"/>
      <artifact:set groupId="org.nuxeo.ecm.platform" artifactId="nuxeo-platform-document-routing-*"/>
      <artifact:set refid="${application.jars}" />
    </copy>
    <!-- Deploy custom configuration -->
    <copy todir="${app.path}/templates/" overwrite="true">
      <fileset refid="${distribution.templates}"/>
    </copy>
    <echo file="${app.path}/templates/nuxeo.defaults" append="yes" message="${line.separator}#include cmf${line.separator}nuxeo.templates=${default.templates}" /> 
    <antcall target="${update.nuxeo.defaults.task}" />
    <echo file="${app.path}/templates/common/config/nuxeo.properties" append="yes" message="${line.separator}org.nuxeo.ecm.product.name=${product.name}${line.separator}org.nuxeo.ecm.product.version=${nuxeo.cm.version}" />
    <antcall target="set-distribution-properties"> 
      <param name="distribution.properties.file" value="${app.path}/templates/common/config/distribution.properties" /> 
      <param name="org.nuxeo.distribution.name" value="${distribution.name}" /> 
      <param name="org.nuxeo.distribution.server" value="${distribution.server}"/> 
      <param name="org.nuxeo.distribution.version" value="${nuxeo.cm.version}" /> 
      <param name="org.nuxeo.distribution.date" value="${DSTAMP}${TSTAMP}"/> 
    </antcall>
    <antcall target="zip" />
  </target>

  <target name="zip">
    <zip
       destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}-${distribution.shortName}.zip"
       basedir="${stagedir}" />
    <echo>Distribution built:
      ${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}.zip</echo>
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-${distribution}-${distribution.shortName}.zip" classifier="${distribution}-${distribution.shortName}" type="zip" target="${maven.project.groupId}:${maven.project.artifactId}" />                                                                                                                                                               
  </target>

  <target name="run-tomcat" depends="init-cmf" if="maven.profile.tomcat">
    <antcall target="build-server" />
  </target>

  <target name="run-corr-tomcat" depends="init-corr" if="maven.profile.tomcatCorr">
    <antcall target="build-server" />
  </target>

  <target name="run-tomcat-funkload" depends="init-cmf-funkload" if="maven.profile.funkloadLoadTest">
    <antcall target="build-server" />
  </target>

  <target name="server" depends="init">
    <antcall target="run-tomcat">
      <param name="distribution" value="tomcat" />
      <param name="distribution.server" value="tomcat" />
      <param name="distrib.key" value="org.nuxeo.ecm.distribution:nuxeo-distribution-tomcat:${nuxeo.features.version}:zip" />
      <param name="distrib.classifier" value="nuxeo-cap" />
      <param name="app.path" value="${stagedir}/nuxeo-cm-tomcat" />
      <param name="bundles.dir" value="${stagedir}/nuxeo-cm-tomcat/nxserver/bundles" />
      <param name="plugins.dir" value="${stagedir}/nuxeo-cm-tomcat/nxserver/plugins" />
      <param name="config.dir" value="${stagedir}/nuxeo-cm-tomcat/nxserver/config" />
      <param name="deploy.dir" value="nxserver" />
      <param name="distribution.name" value="cmf" />
      <param name="distribution.shortName" value="cmf" />
      <param name="distribution.templates" value="distribution-templates" />
      <param name="application.jars" value="application-jars" />
      <param name="default.templates" value="default,cmf" />
      <param name="update.nuxeo.defaults.task" value="update-cmf-defaults" />
      <param name="product.name" value="CMF" />
    </antcall>
    <antcall target="run-corr-tomcat">
      <param name="distribution" value="tomcat" />
      <param name="distribution.server" value="tomcat" />
      <param name="distrib.key" value="org.nuxeo.ecm.distribution:nuxeo-distribution-tomcat:${nuxeo.features.version}:zip" />
      <param name="distrib.classifier" value="nuxeo-dm" />
      <param name="app.path" value="${stagedir}/nuxeo-correspondence-tomcat" />
      <param name="bundles.dir" value="${stagedir}/nuxeo-correspondence-tomcat/nxserver/bundles" />
      <param name="plugins.dir" value="${stagedir}/nuxeo-correspondence-tomcat/nxserver/plugins" />
      <param name="config.dir" value="${stagedir}/nuxeo-correspondence-tomcat/nxserver/config" />
      <param name="deploy.dir" value="nxserver" />
      <param name="distribution.name" value="nuxeo-correspondence" />
      <param name="distribution.shortName" value="corr" />
      <param name="distribution.templates" value="distribution-templates-corr" />
      <param name="application.jars" value="application-jars-corr" />
      <param name="default.templates" value="default,cmf,correspondence" />
      <param name="update.nuxeo.defaults.task" value="update-corr-defaults" />
      <param name="product.name" value="Nuxeo-Correspondence" />
    </antcall>
    <antcall target="run-tomcat-funkload">
      <param name="distribution" value="tomcat" />
      <param name="distribution.server" value="tomcat" />
      <param name="distrib.key" value="org.nuxeo.ecm.distribution:nuxeo-distribution-tomcat:${nuxeo.features.version}:zip" />
      <param name="distrib.classifier" value="nuxeo-dm" />
      <param name="app.path" value="${stagedir}/nuxeo-cm-tomcat" />
      <param name="bundles.dir" value="${stagedir}/nuxeo-cm-tomcat/nxserver/bundles" />
      <param name="plugins.dir" value="${stagedir}/nuxeo-cm-tomcat/nxserver/plugins" />
      <param name="config.dir" value="${stagedir}/nuxeo-cm-tomcat/nxserver/config" />
      <param name="deploy.dir" value="nxserver" />
      <param name="distribution.name" value="cmf-funkload" />
      <param name="distribution.shortName" value="cmf-funkload" />
      <param name="distribution.templates" value="distribution-templates-cmf-funkload" />
      <param name="application.jars" value="application-jars" />
      <param name="default.templates" value="default,cmf,cmf-funkload" />
      <param name="update.nuxeo.defaults.task" value="update-cmf-funkload-defaults" />
      <param name="product.name" value="CMF" />
    </antcall>
  </target>
</project>
