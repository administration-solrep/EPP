<?xml version="1.0"?>

<component name="org.nuxeo.ecm.directory.ldap.storage.users">
  <implementation class="org.nuxeo.ecm.directory.ldap.LDAPDirectoryDescriptor" />
  <implementation class="org.nuxeo.ecm.directory.ldap.LDAPServerDescriptor" />
  <require>org.nuxeo.ecm.directory.ldap.LDAPDirectoryFactory</require>

  <require>org.nuxeo.ecm.platform.usermanager.UserManagerImpl</require>

  <extension
     target="org.nuxeo.ecm.platform.usermanager.UserService"
     point="userManager">
     <userManager>
      <users>
        <directory>userLdapDirectory</directory>
      </users>
      <groups>
        <directory>groupMultiDirectory</directory>
      </groups>
    </userManager>
  </extension>

  <require>org.nuxeo.ecm.directory.multi.MultiDirectoryFactory</require>

  <extension
    target="org.nuxeo.ecm.directory.multi.MultiDirectoryFactory"
    point="directories">

   <directory name="groupMultiDirectory">
      <schema>group</schema>
      <idField>groupname</idField>

      <source name="ldap" creation="false">
        <subDirectory name="groupLdapDirectory"/>
      </source>

      <source name="sql" creation="true">
        <subDirectory name="groupDirectory"/>
      </source>
    </directory>
  </extension>

  <!-- the groups SQL directories are required to make this bundle work -->
  <require>org.nuxeo.ecm.directory.sql.storage</require>

  <extension target="org.nuxeo.ecm.directory.ldap.LDAPDirectoryFactory"
    point="servers">

    <!-- Configuration of a server connection

      A single server declaration can point to a cluster of replicated
      servers (using OpenLDAP's slapd + sluprd for instance). To leverage
      such a cluster and improve availibility, please provide one
      <ldapUrl/> tag for each replica of the cluster.
    -->
    <server name="default">

      <ldapUrl>ldap://127.0.0.1:10389</ldapUrl>
      <!-- Optional servers from the same cluster for failover
        and load balancing:

        <ldapUrl>ldap://server2:389</ldapUrl>
        <ldapUrl>ldaps://server3:389</ldapUrl>

        "ldaps" means TLS/SSL connection.
      -->

      <!-- Credentials used by Nuxeo5 to browse the directory, create
        and modify entries.

        Only the authentication of users (bind) use the credentials entered
        through the login form if any.
      -->
      <bindDn>uid=admin,ou=system</bindDn>
      <bindPassword>admin</bindPassword>

    </server>

  </extension>

  <extension target="org.nuxeo.ecm.directory.ldap.LDAPDirectoryFactory"
    point="directories">

    <directory name="userLdapDirectory">
      <server>default</server>
      <schema>user</schema>
      <idField>username</idField>
      <passwordField>password</passwordField>

      <searchBaseDn>ou=people,dc=example,dc=com</searchBaseDn>
      <searchClass>person</searchClass>
      <!-- To additionally restricte entries you can add an
        arbitrary search filter such as the following:

        <searchFilter>(&amp;(sn=toto*)(myCustomAttribute=somevalue))</searchFilter>

        Beware that "&" writes "&amp;" in XML.
      -->

      <!-- use subtree if the people branch is nested -->
      <searchScope>subtree</searchScope>

      <readOnly>true</readOnly>

      <!-- uncomment to enable cache -->
      <cacheTimeout>10</cacheTimeout>
      <cacheMaxSize>1000</cacheMaxSize>

      <creationBaseDn>ou=people,dc=example,dc=com</creationBaseDn>
      <creationClass>top</creationClass>
      <creationClass>person</creationClass>
      <creationClass>organizationalPerson</creationClass>
      <creationClass>inetOrgPerson</creationClass>
      <rdnAttribute>uid</rdnAttribute>

      <fieldMapping name="username">uid</fieldMapping>
      <fieldMapping name="password">userPassword</fieldMapping>
      <fieldMapping name="firstName">givenName</fieldMapping>
      <fieldMapping name="lastName">sn</fieldMapping>
      <!-- G. Racinet: les attributs correspondants n'existent pas pour
      l'instant sur les fiches utilisateurs de la CRAM.

      Il conviendra de remplacer 'o' et 'mail' par les noms des futurs
      attributs. -->
      <fieldMapping name="company">o</fieldMapping>
      <fieldMapping name="email">mail</fieldMapping>

      <references>

        <inverseReference field="groups" directory="groupMultiDirectory"
          dualReferenceField="members" />

      </references>

    </directory>

   <directory name="groupLdapDirectory">

      <server>default</server>

      <schema>group</schema>
      <idField>groupname</idField>

      <searchBaseDn>ou=groups,dc=example,dc=com</searchBaseDn>
      <searchFilter>(objectClass=groupOfUniqueNames)</searchFilter>
      <searchScope>subtree</searchScope>

      <readOnly>true</readOnly>

      <!-- comment <cache* /> tags to disable the cache -->
      <cacheTimeout>10</cacheTimeout>
      <cacheMaxSize>1000</cacheMaxSize>

      <!-- Maximum number of entries returned by the search -->
      <querySizeLimit>200</querySizeLimit>

      <!-- Time to wait for a search to finish. 0 to wait indefinitely -->
      <queryTimeLimit>0</queryTimeLimit>

      <rdnAttribute>cn</rdnAttribute>
      <fieldMapping name="groupname">cn</fieldMapping>

      <references>

        <ldapReference field="members" directory="userLdapDirectory"
          forceDnConsistencyCheck="false"
          staticAttributeId="uniqueMember" />

        <ldapReference field="subGroups" directory="groupLdapDirectory"
          forceDnConsistencyCheck="false"
          staticAttributeId="uniqueMember" />

        <inverseReference field="parentGroups"
          directory="groupLdapDirectory" dualReferenceField="subGroups" />

      </references>

    </directory>

  </extension>

</component>
