package fr.dila.dictao.dvs.api;

public enum DVSOpStatus {
	OK(0), AUTHENTICATION_BAD_DATA(11), PARAMS_BAD_LENGTH(12), REQUEST_BAD_LENGTH(13), REQUEST_BAD_FORMAT(14), AUTHENTICATION_MISSING_DATA(
			15), AUTHENTICATION_BAD_FORMAT(16), AUTHENTICATION_BAD_TYPE(17), BEFORE_PLUGIN_ERROR(18), SIGNATURE_NODE_NOT_FOUND(
			19), UNKNOWN_APPLICATION(21), UNKNOWN_TRANSACTION(22), UNAUTHORIZED_OPERATION(23), INACTIVE_APPLICATION(26), INVALID_CRYPTO_KEY(
			27), SERVICE_ACCESS_ERROR(31), DATABASE_ERROR(32), TIMESTAMPING_ERROR(33), COMPLETION_ERROR(41), LICENCE_EXCEPTION(
			51), INVALID_CONF(52), CONF_NOT_FOUND(53), PEER_CORUM_NOT_REACH(61), NO_TRUSTED_NTP_PEER(62), UNREACHABLE_PEER(
			63), INTERNAL_TSS(88), AFTER_PLUGIN_ERROR(90), PROVISIONING_INTERNAL_ERROR(97), INTERNAL_ERROR(99), MANAGEMENT_INVALID_CERT(
			8193), MANAGEMENT_INVALID_USER(8194), MANAGEMENT_INVALID_GROUP_ID(8196), MANAGEMENT_UNAUTHORISED(8200), INVALID_CONFIGURATION(
			8208), SERVICE_SOAP_ERROR(8224), SCHEDULER_SOAP_ERROR(8240), MANAGEMENT_DATABASE_EROR(8256), SERVICE_COMMUNICATION_EROR(
			8320), LICENSE_LIMITATION(8352), MANAGEMENT_INTERNAL_ERROR(10240), UNKNOWN(-1), ;

	private int	_value;

	public int toInt() {
		return this._value;
	}

	public static DVSOpStatus fromInt(int value) {
		DVSOpStatus returnValue = UNKNOWN;
		for (DVSOpStatus status : values()) {
			if (status._value == value) {
				returnValue = status;
				break;
			}
		}
		return returnValue;
	}

	private DVSOpStatus(int value) {
		this._value = value;
	}
}
