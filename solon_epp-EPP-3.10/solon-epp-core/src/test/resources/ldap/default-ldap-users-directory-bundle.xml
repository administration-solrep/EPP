<?xml version="1.0"?>

<component name="org.nuxeo.ecm.directory.ldap.storage.users">
	<implementation class="org.nuxeo.ecm.directory.ldap.LDAPDirectoryDescriptor" />
	<require>org.nuxeo.ecm.directory.ldap.LDAPDirectoryFactory</require>

	<!-- the groups SQL directories are required to make this bundle work <require>org.nuxeo.ecm.directory.sql.storage</require> -->

	<extension target="org.nuxeo.ecm.directory.ldap.LDAPDirectoryFactory"
		point="servers">

		<!-- Configuration of a server connection A single server declaration can 
			point to a cluster of replicated servers (using OpenLDAP's slapd + sluprd 
			for instance). To leverage such a cluster and improve availibility, please 
			provide one <ldapUrl/> tag for each replica of the cluster. -->
		<server name="default">

			<!-- The server connection is useless since with use an internal server -->
			<ldapUrl></ldapUrl>
			<!-- Optional servers from the same cluster <ldapUrl>ldap://server2:389</ldapUrl> 
				<ldapUrl>ldap://server3:389</ldapUrl> -->

			<!-- Credentials used by Nuxeo5 to browse the directory, create and modify 
				entries Only the authentication of users (bind) use the credentials entered 
				through the login form. -->
			<bindDn>cn=nuxeo5,ou=Reponses,dc=dila,dc=fr</bindDn>
			<bindPassword>changeme</bindPassword>
		</server>

	</extension>

	<extension target="org.nuxeo.ecm.directory.ldap.LDAPDirectoryFactory"
		point="directories">

		<directory name="userDirectory">
			<server>default</server>
			<schema>user</schema>
			<idField>username</idField>
			<passwordField>password</passwordField>

			<searchBaseDn>ou=people,ou=Reponses</searchBaseDn>
			<searchClass>person</searchClass>
			<!-- To additionally restricte entries you can add an arbitrary search 
				filter such as the following: <searchFilter>(&amp;(sn=toto*)(myCustomAttribute=somevalue))</searchFilter> 
				Beware that "&" writes "&amp;" in XML. -->

			<!-- use subtree if the people branch is nested -->
			<searchScope>onelevel</searchScope>

			<!-- using 'subany', search will match *toto*. use 'subfinal' to match 
				*toto and 'subinitial' to match toto*. subinitial is the default behaviour -->
			<substringMatchType>subany</substringMatchType>

			<readOnly>false</readOnly>

			<!-- comment <cache* /> tags to disable the cache -->
			<!-- cache timeout in seconds -->
			<cacheTimeout>3600</cacheTimeout>

			<!-- maximum number of cached entries before global invalidation -->
			<cacheMaxSize>1000</cacheMaxSize>

			<creationBaseDn>ou=people,ou=Reponses,dc=dila,dc=fr</creationBaseDn>
			<creationClass>top</creationClass>
			<creationClass>person</creationClass>
			<creationClass>organizationalPerson</creationClass>
			<creationClass>inetOrgPerson</creationClass>

			<rdnAttribute>uid</rdnAttribute>
			<fieldMapping name="username">uid</fieldMapping>
			<fieldMapping name="password">userPassword</fieldMapping>
			<fieldMapping name="firstName">givenName</fieldMapping>
			<fieldMapping name="lastName">sn</fieldMapping>
			<fieldMapping name="company">o</fieldMapping>
			<fieldMapping name="email">mail</fieldMapping>

			<references>

				<!-- /!\ Les références inverses ne marchent pas dans les tests unitaires 
					<inverseReference field="groups" directory="groupDirectory" dualReferenceField="members" 
					/> -->

			</references>

		</directory>

	</extension>

</component>
