-- Generated on 2018-05-29 16:50 by extract-ddl.sh -d SOLONEPP_INTE -o epp-ddl -k
-- new object type path: SCHEMA_EXPORT/TYPE/TYPE_SPEC
CREATE TYPE "NX_STRING_ARRAY" AS VARRAY(100) OF VARCHAR2(32767);


CREATE TYPE "NX_STRING_TABLE" AS TABLE OF VARCHAR2(4000);


-- new object type path: SCHEMA_EXPORT/SEQUENCE/SEQUENCE
 CREATE SEQUENCE  "JENA_LONG_LIT_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 200 NOORDER  NOCYCLE 


 CREATE SEQUENCE  "JENA_LONG_URI_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 200 NOORDER  NOCYCLE 


 CREATE SEQUENCE  "JENA_PREFIX_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 200 NOORDER  NOCYCLE 


 CREATE SEQUENCE  "JENA_GRAPH_ID_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 200 NOORDER  NOCYCLE 


 CREATE SEQUENCE  "HIBERNATE_SEQUENCE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 66072 CACHE 200 NOORDER  NOCYCLE 


-- new object type path: SCHEMA_EXPORT/TABLE/TABLE
CREATE TABLE "RELATION_SEARCH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DC_TITLE" NVARCHAR2(2000), 
	"ECM_FULLTEXT" NVARCHAR2(2000)
   ) 


CREATE TABLE "REL_SRCH_ECM_PATH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "REPOSITORIES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"NAME" VARCHAR2(250 BYTE)
   ) 


CREATE TABLE "ROUTING_TASK" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"AUTOMATICVALIDATION" NUMBER(1,0), 
	"ACTIONNABLE" NUMBER(1,0), 
	"DISTRIBUTIONMAILBOXID" NVARCHAR2(2000), 
	"TYPE" NVARCHAR2(2000), 
	"DUEDATE" TIMESTAMP (6)
   ) 


CREATE TABLE "SEARCH_COVERAGE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "SEARCH_CURRENTLIFECYCLESTATES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "SEARCH_NATURE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "SEARCH_SEARCHPATH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "SEARCH_SUBJECTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "SMART_FOLDER" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"QUERYPART" NVARCHAR2(2000)
   ) 


CREATE TABLE "DOS_GROUPEPARLEMENTAIRE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "HISTORIQUE_MDP" 
   (	"ID" NUMBER(19,0) NOT NULL ENABLE, 
	"LOGIN" VARCHAR2(255 CHAR), 
	"DERNIER_MDP" VARCHAR2(255 CHAR), 
	"DATE_ENREGISTREMENT" TIMESTAMP (6)
   ) 


CREATE TABLE "VOC_DEC_PROC_ACC" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "INSTITUTION" 
   (	"ID_ORGANIGRAMME" NVARCHAR2(255) NOT NULL ENABLE, 
	"DATE_FIN" TIMESTAMP (6), 
	"DATE_DEBUT" TIMESTAMP (6), 
	"DATE_VERROU" TIMESTAMP (6), 
	"LABEL" NVARCHAR2(255), 
	"DELETED" NUMBER(1,0), 
	"UTILISATEUR_VERROU" NVARCHAR2(255), 
	"FUNCTION_READ" NVARCHAR2(255)
   ) 


CREATE TABLE "ENTITE" 
   (	"ID_ORGANIGRAMME" NVARCHAR2(255) NOT NULL ENABLE, 
	"DATE_FIN" TIMESTAMP (6), 
	"DATE_DEBUT" TIMESTAMP (6), 
	"DATE_VERROU" TIMESTAMP (6), 
	"LABEL" NVARCHAR2(255), 
	"DELETED" NUMBER(1,0), 
	"UTILISATEUR_VERROU" NVARCHAR2(255), 
	"ID_PARENT_GOUV" NVARCHAR2(255), 
	"EDITION" NVARCHAR2(255), 
	"FORMULE" NVARCHAR2(255), 
	"CIVILITE_MINISTRE" NVARCHAR2(255), 
	"NOM_MINISTRE" NVARCHAR2(255), 
	"PRENOM_MINISTRE" NVARCHAR2(255), 
	"ORDRE" NUMBER(19,0), 
	"FUNCTION_READ" NVARCHAR2(255), 
	"NOR_MINISTERE" VARCHAR2(3500 BYTE), 
	"SUIVI_ACTIVITE_NORMATIVE" NUMBER(1,0)
   ) 


CREATE TABLE "UNITE_STRUCTURELLE" 
   (	"ID_ORGANIGRAMME" NVARCHAR2(255) NOT NULL ENABLE, 
	"DATE_FIN" TIMESTAMP (6), 
	"DATE_DEBUT" TIMESTAMP (6), 
	"DATE_VERROU" TIMESTAMP (6), 
	"LABEL" NVARCHAR2(255), 
	"DELETED" NUMBER(1,0), 
	"UTILISATEUR_VERROU" NVARCHAR2(255), 
	"ID_PARENT_ENTITE" VARCHAR2(3500 BYTE), 
	"ID_PARENT_UNITE" VARCHAR2(3500 BYTE), 
	"ID_PARENT_INSTITUTION" VARCHAR2(3500 BYTE), 
	"TYPE" NVARCHAR2(255), 
	"FUNCTION_READ" NVARCHAR2(255), 
	"NOR_DIRECTION" VARCHAR2(3500 BYTE)
   ) 


CREATE TABLE "POSTE" 
   (	"ID_ORGANIGRAMME" NVARCHAR2(255) NOT NULL ENABLE, 
	"DATE_FIN" TIMESTAMP (6), 
	"DATE_DEBUT" TIMESTAMP (6), 
	"DATE_VERROU" TIMESTAMP (6), 
	"LABEL" NVARCHAR2(255), 
	"DELETED" NUMBER(1,0), 
	"UTILISATEUR_VERROU" NVARCHAR2(255), 
	"ID_PARENT_ENTITE" VARCHAR2(3500 BYTE), 
	"ID_PARENT_UNITE" VARCHAR2(3500 BYTE), 
	"ID_PARENT_INSTITUTION" VARCHAR2(3500 BYTE), 
	"CHARGE_MISSION_SGG" NUMBER(1,0), 
	"POSTE_BDC" NUMBER(1,0), 
	"SUPERVISEUR_SGG" NUMBER(1,0), 
	"CONSEILLER_PM" NUMBER(1,0), 
	"POSTE_WS" NUMBER(1,0), 
	"WS_URL" NVARCHAR2(500), 
	"WS_LOGIN" NVARCHAR2(255), 
	"WS_MDP" NVARCHAR2(255), 
	"WS_CLE" NVARCHAR2(255), 
	"MEMBRES" VARCHAR2(3500 BYTE), 
	"FUNCTION_READ" NVARCHAR2(255)
   ) 


CREATE TABLE "DOS_RAPPORTEURLIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "DOS_DATELIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" TIMESTAMP (6)
   ) 


CREATE TABLE "DOSSIER" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"AUTEUR" NVARCHAR2(2000), 
	"DATEREFUSPROCEDUREENGAGEMENTAN" TIMESTAMP (6), 
	"NOR" NVARCHAR2(2000), 
	"DATEDEPOTRAPPORT" TIMESTAMP (6), 
	"ALERTECOUNT" NUMBER(19,0), 
	"NUMEROJO" NUMBER(19,0), 
	"EMETTEUR" NVARCHAR2(2000), 
	"DATE" TIMESTAMP (6), 
	"DATERETRAIT" TIMESTAMP (6), 
	"COMMISSIONSAISIE" NVARCHAR2(2000), 
	"DATEPUBLICATION" TIMESTAMP (6), 
	"NIVEAULECTURE" NVARCHAR2(2000), 
	"REDEPOT" NUMBER(1,0), 
	"DATEADOPTION" TIMESTAMP (6), 
	"DATEDISTRIBUTIONELECTRONIQUE" TIMESTAMP (6), 
	"DATEREFUSPROCEDUREENG_4039D820" TIMESTAMP (6), 
	"DATEPROMULGATION" TIMESTAMP (6), 
	"SORTADOPTION" NVARCHAR2(2000), 
	"URLDOSSIERAN" NVARCHAR2(2000), 
	"URLDOSSIERSENAT" NVARCHAR2(2000), 
	"COSIGNATAIRE" NVARCHAR2(2000), 
	"NIVEAULECTURENUMERO" NUMBER(19,0), 
	"OBJET" NVARCHAR2(2000), 
	"NUMERODEPOTTEXTE" NVARCHAR2(2000), 
	"HORODATAGE" TIMESTAMP (6), 
	"SENAT" NVARCHAR2(2000), 
	"TITRE" NVARCHAR2(2000), 
	"DESTINATAIRE" NVARCHAR2(2000), 
	"DATECMP" TIMESTAMP (6), 
	"NUMEROLOI" NUMBER(19,0), 
	"NATURELOI" NVARCHAR2(2000), 
	"DATEREFUS" TIMESTAMP (6), 
	"TYPELOI" NVARCHAR2(2000), 
	"DATEDEPOTTEXTE" TIMESTAMP (6), 
	"POSITIONALERTE" NUMBER(1,0), 
	"DATEENGAGEMENTPROCEDURE" TIMESTAMP (6), 
	"NUMEROTEXTEADOPTE" NVARCHAR2(2000), 
	"COMMISSIONSAISIEAUFOND" NVARCHAR2(2000), 
	"INTITULE" NVARCHAR2(2000), 
	"NUMERODEPOTRAPPORT" NVARCHAR2(2000), 
	"PAGEJO" NUMBER(19,0), 
	"IDDOSSIER" VARCHAR2(2000 CHAR), 
	"IDENTIFIANTMETIER" NVARCHAR2(2000), 
	"SENSAVIS" NVARCHAR2(2000), 
	"BULLETINBLANC" NUMBER(19,0), 
	"VOTEPOUR" NUMBER(19,0), 
	"VOTECONTRE" NUMBER(19,0), 
	"SUFFRAGEEXPRIME" NUMBER(19,0), 
	"ABSTENTION" NUMBER(19,0), 
	"DATEACTE" TIMESTAMP (6), 
	"TYPEACTE" NVARCHAR2(2000), 
	"ECHEANCE" NVARCHAR2(2000), 
	"DATEDECLARATION" TIMESTAMP (6), 
	"DEMANDEVOTE" NUMBER(1,0), 
	"DATEVOTE" TIMESTAMP (6), 
	"DATEPRESENTATION" TIMESTAMP (6), 
	"DATEAUDITION" TIMESTAMP (6), 
	"FONCTION" NVARCHAR2(2000), 
	"PERSONNE" NVARCHAR2(2000), 
	"DATELETTREPM" TIMESTAMP (6), 
	"DATEDEMANDE" TIMESTAMP (6), 
	"DOSSIERCIBLE" NVARCHAR2(2000), 
	"BASELEGALE" NVARCHAR2(2000), 
	"ORGANISME" NVARCHAR2(2000), 
	"DATEREFUSASSEMBLEE1" TIMESTAMP (6), 
	"DATECONFERENCEASSEMBLEE2" TIMESTAMP (6), 
	"DECISIONPROCACC" NVARCHAR2(2000), 
	"DATEREFUSENGAGEMENTPROCEDURE" TIMESTAMP (6)
   ) 


CREATE TABLE "DUBLINCORE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"CREATOR" NVARCHAR2(2000), 
	"NATURE" NVARCHAR2(2000), 
	"SOURCE" NVARCHAR2(2000), 
	"CREATED" TIMESTAMP (6), 
	"DESCRIPTION" NVARCHAR2(2000), 
	"RIGHTS" NVARCHAR2(2000), 
	"VALID" TIMESTAMP (6), 
	"FORMAT" NVARCHAR2(2000), 
	"ISSUED" TIMESTAMP (6), 
	"MODIFIED" TIMESTAMP (6), 
	"LANGUAGE" NVARCHAR2(2000), 
	"COVERAGE" NVARCHAR2(2000), 
	"EXPIRED" TIMESTAMP (6), 
	"LASTCONTRIBUTOR" NVARCHAR2(2000), 
	"TITLE" NVARCHAR2(2000)
   ) 


CREATE TABLE "EVENEMENT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DOSSIER" NVARCHAR2(2000), 
	"EVENEMENTPARENT" NVARCHAR2(2000), 
	"EMETTEUR" NVARCHAR2(2000), 
	"DESTINATAIRE" NVARCHAR2(2000), 
	"DESTINATAIRECOPIECONCAT" NVARCHAR2(2000), 
	"BRANCHEALERTE" NVARCHAR2(2000), 
	"TYPEEVENEMENT" NVARCHAR2(2000), 
	"IDEVENEMENT" VARCHAR2(2000 CHAR), 
	"DOSSIERPRECEDENT" NVARCHAR2(2000)
   ) 


CREATE TABLE "EVT_DESTINATAIRECOPIE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CASE_ITEM" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"RECEIVE_DATE" TIMESTAMP (6), 
	"BODY" NVARCHAR2(2000), 
	"TYPE" NVARCHAR2(2000), 
	"REFERENCE" NVARCHAR2(2000), 
	"DEFAULTCASEID" NVARCHAR2(2000), 
	"DOCUMENT_DATE" TIMESTAMP (6), 
	"IMPORT_DATE" TIMESTAMP (6), 
	"SENDING_DATE" TIMESTAMP (6), 
	"CONFIDENTIALITY" NVARCHAR2(2000), 
	"ORIGIN" NVARCHAR2(2000)
   ) 


CREATE TABLE "CASE_LINK" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"COMMENT" NVARCHAR2(2000), 
	"TYPEINFO" NVARCHAR2(2000), 
	"MESSAGETYPE" NVARCHAR2(2000), 
	"ARNONDONNECOUNT" NUMBER(19,0), 
	"CASEDOCUMENTID" NVARCHAR2(2000), 
	"DRAFT" NUMBER(1,0), 
	"CASEITEMID" NVARCHAR2(2000), 
	"ARNECESSAIRE" NUMBER(1,0), 
	"DATE" TIMESTAMP (6), 
	"DATETRAITEMENT" TIMESTAMP (6), 
	"ETATMESSAGE" NVARCHAR2(2000), 
	"ISACTIONABLE" NUMBER(1,0), 
	"SENDERMAILBOXID" NVARCHAR2(2000), 
	"SENTDATE" TIMESTAMP (6), 
	"CASEREPOSITORYNAME" NVARCHAR2(2000), 
	"TYPE" NVARCHAR2(2000), 
	"ISSENT" NUMBER(1,0), 
	"SENDER" NVARCHAR2(2000), 
	"ISREAD" NUMBER(1,0), 
	"IDDOSSIER" VARCHAR2(2000 CHAR), 
	"IDEVENEMENT" VARCHAR2(2000 CHAR), 
	"ACTIVEVERSIONID" VARCHAR2(36 BYTE)
   ) 


CREATE TABLE "CIRCONSCRIPTION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"PROPRIETAIRE" NVARCHAR2(2000), 
	"DATEDEBUT" TIMESTAMP (6), 
	"NOM" NVARCHAR2(2000), 
	"DATEFIN" TIMESTAMP (6), 
	"IDENTIFIANT" NVARCHAR2(2000)
   ) 


CREATE TABLE "CLASSIFICATION_TARGETS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDIST_ALL_ACTION_PAR_6B4BBED8" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDIST_ALL_COPY_PARTI_21AB3C5B" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDIST_INITIAL_ACTION_4CD43708" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "ACLR" 
   (	"ACL_ID" VARCHAR2(34 BYTE) NOT NULL ENABLE, 
	"ACL" VARCHAR2(4000 BYTE)
   ) 


CREATE TABLE "ACLR_MODIFIED" 
   (	"HIERARCHY_ID" VARCHAR2(36 BYTE), 
	"IS_NEW" NUMBER(1,0)
   ) 


CREATE TABLE "ACLR_PERMISSION" 
   (	"PERMISSION" VARCHAR2(250 BYTE)
   ) 


CREATE TABLE "NSB_RECEIVERMAILLIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "QRTZ_SIMPLE_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"REPEAT_COUNT" NUMBER(7,0) NOT NULL ENABLE, 
	"REPEAT_INTERVAL" NUMBER(12,0) NOT NULL ENABLE, 
	"TIMES_TRIGGERED" NUMBER(10,0) NOT NULL ENABLE
   ) 


CREATE TABLE "QRTZ_CRON_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"CRON_EXPRESSION" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TIME_ZONE_ID" VARCHAR2(80 BYTE)
   ) 


CREATE TABLE "QRTZ_SIMPROP_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"STR_PROP_1" VARCHAR2(512 BYTE), 
	"STR_PROP_2" VARCHAR2(512 BYTE), 
	"STR_PROP_3" VARCHAR2(512 BYTE), 
	"INT_PROP_1" NUMBER(10,0), 
	"INT_PROP_2" NUMBER(10,0), 
	"LONG_PROP_1" NUMBER(13,0), 
	"LONG_PROP_2" NUMBER(13,0), 
	"DEC_PROP_1" NUMBER(13,4), 
	"DEC_PROP_2" NUMBER(13,4), 
	"BOOL_PROP_1" VARCHAR2(1 BYTE), 
	"BOOL_PROP_2" VARCHAR2(1 BYTE)
   ) 


CREATE TABLE "NXP_LOGS" 
   (	"LOG_ID" NUMBER(*,0) NOT NULL ENABLE, 
	"LOG_EVENT_CATEGORY" VARCHAR2(255 CHAR), 
	"LOG_EVENT_COMMENT" VARCHAR2(1024 CHAR), 
	"LOG_DOC_LIFE_CYCLE" VARCHAR2(255 CHAR), 
	"LOG_DOC_PATH" VARCHAR2(1024 CHAR), 
	"LOG_DOC_TYPE" VARCHAR2(255 CHAR), 
	"LOG_DOC_UUID" VARCHAR2(255 CHAR), 
	"LOG_EVENT_DATE" TIMESTAMP (6), 
	"LOG_EVENT_ID" VARCHAR2(255 CHAR) NOT NULL ENABLE, 
	"LOG_PRINCIPAL_NAME" VARCHAR2(255 CHAR)
   ) 


CREATE TABLE "NXP_LOGS_MAPEXTINFOS" 
   (	"LOG_FK" NUMBER(*,0) NOT NULL ENABLE, 
	"INFO_FK" NUMBER(19,0) NOT NULL ENABLE, 
	"MAPKEY" VARCHAR2(255 CHAR) NOT NULL ENABLE
   ) 


CREATE TABLE "DOS_COMMISSIONS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "VER_GROUPEPARLEMENTAIRE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "FACETED_SEARCH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"CONTENT_VIEW_NAME" NVARCHAR2(2000)
   ) 


CREATE TABLE "FACETED_SEARCH_DEFAULT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ECM_FULLTEXT" NVARCHAR2(2000), 
	"DC_CREATED_MAX" TIMESTAMP (6), 
	"DC_CREATED_MIN" TIMESTAMP (6), 
	"DC_MODIFIED_MAX" TIMESTAMP (6), 
	"DC_MODIFIED_MIN" TIMESTAMP (6)
   ) 


CREATE TABLE "HIERARCHY" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"PARENTID" VARCHAR2(36 BYTE), 
	"POS" NUMBER(10,0), 
	"NAME" NVARCHAR2(2000), 
	"ISPROPERTY" NUMBER(1,0), 
	"PRIMARYTYPE" VARCHAR2(250 BYTE), 
	"MIXINTYPES" VARCHAR2(250 BYTE), 
	"ISCHECKEDIN" NUMBER(1,0), 
	"BASEVERSIONID" VARCHAR2(36 BYTE), 
	"MAJORVERSION" NUMBER(19,0), 
	"MINORVERSION" NUMBER(19,0), 
	"ISVERSION" NUMBER(1,0)
   ) 


CREATE TABLE "QRTZ_PAUSED_TRIGGER_GRPS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE
   ) 


CREATE TABLE "QRTZ_FIRED_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"ENTRY_ID" VARCHAR2(95 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"INSTANCE_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"FIRED_TIME" NUMBER(13,0) NOT NULL ENABLE, 
	"PRIORITY" NUMBER(13,0) NOT NULL ENABLE, 
	"STATE" VARCHAR2(16 BYTE) NOT NULL ENABLE, 
	"JOB_NAME" VARCHAR2(200 BYTE), 
	"JOB_GROUP" VARCHAR2(200 BYTE), 
	"IS_NONCONCURRENT" VARCHAR2(1 BYTE), 
	"REQUESTS_RECOVERY" VARCHAR2(1 BYTE)
   ) 


CREATE TABLE "QRTZ_SCHEDULER_STATE" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"INSTANCE_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"LAST_CHECKIN_TIME" NUMBER(13,0) NOT NULL ENABLE, 
	"CHECKIN_INTERVAL" NUMBER(13,0) NOT NULL ENABLE
   ) 


CREATE TABLE "QRTZ_LOCKS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"LOCK_NAME" VARCHAR2(40 BYTE) NOT NULL ENABLE
   ) 


CREATE TABLE "BATCH_LOG" 
   (	"ID_LOG" NUMBER(19,0) NOT NULL ENABLE, 
	"END_TIME" TIMESTAMP (6), 
	"ERROR_COUNT" NUMBER(19,0) NOT NULL ENABLE, 
	"NAME" NVARCHAR2(255) NOT NULL ENABLE, 
	"PARENT_ID" NUMBER(19,0), 
	"SERVER" NVARCHAR2(255) NOT NULL ENABLE, 
	"START_TIME" TIMESTAMP (6) NOT NULL ENABLE, 
	"TOMCAT" NUMBER(19,0) NOT NULL ENABLE, 
	"TYPE" NVARCHAR2(255) NOT NULL ENABLE
   ) 


CREATE TABLE "BATCH_RESULT" 
   (	"ID_RESULT" NUMBER(19,0) NOT NULL ENABLE, 
	"ID_LOG" NUMBER(19,0) NOT NULL ENABLE, 
	"EXECUTION_RESULT" NUMBER(19,0), 
	"EXECUTION_TIME" NUMBER(19,0) NOT NULL ENABLE, 
	"TEXT" NVARCHAR2(2000) NOT NULL ENABLE
   ) 


CREATE TABLE "NOTIFICATIONS_SUIVI_BATCHS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ETAT_NOTIFICATION" NUMBER(1,0)
   ) 


CREATE TABLE "COMMENT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"AUTHOR" NVARCHAR2(2000), 
	"CREATIONDATE" TIMESTAMP (6), 
	"COMMENTEDDOCID" NVARCHAR2(2000), 
	"TEXT" NVARCHAR2(2000)
   ) 


CREATE TABLE "COMMON" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ICON" NVARCHAR2(2000), 
	"ICON-EXPANDED" NVARCHAR2(2000), 
	"SIZE" NUMBER(19,0)
   ) 


CREATE TABLE "CONTENT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"NAME" NVARCHAR2(2000), 
	"LENGTH" NUMBER(19,0), 
	"DATA" VARCHAR2(40 BYTE), 
	"ENCODING" NVARCHAR2(2000), 
	"DIGEST" NVARCHAR2(2000), 
	"MIME-TYPE" NVARCHAR2(2000)
   ) 


CREATE TABLE "CONTENT_VIEW_DISPLAY" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"PAGESIZE" NUMBER(19,0)
   ) 


CREATE TABLE "continent" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "country" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"parent" NVARCHAR2(2000), 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "MAIL_CC_RECIPIENTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MAIL_RECIPIENTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MANDAT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"IDENTIFIANT" NVARCHAR2(2000), 
	"CIRCONSCRIPTION" NVARCHAR2(2000), 
	"DATEFIN" TIMESTAMP (6), 
	"TYPEMANDAT" NVARCHAR2(2000), 
	"MINISTERE" NVARCHAR2(2000), 
	"TITRE" NVARCHAR2(2000), 
	"DATEDEBUT" TIMESTAMP (6), 
	"ORDREPROTOCOLAIRE" NUMBER(19,0), 
	"APPELLATION" NVARCHAR2(2000), 
	"IDENTITE" NVARCHAR2(2000), 
	"PROPRIETAIRE" NVARCHAR2(2000), 
	"NOR" NVARCHAR2(2000)
   ) 


CREATE TABLE "MEMBRE_GROUPE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"MANDAT" NVARCHAR2(2000), 
	"DATEDEBUT" TIMESTAMP (6), 
	"ORGANISME" NVARCHAR2(2000), 
	"DATEFIN" TIMESTAMP (6), 
	"IDENTIFIANT" NVARCHAR2(2000)
   ) 


CREATE TABLE "MINISTERE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"LIBELLEMINISTRE" NVARCHAR2(2000), 
	"DATEDEBUT" TIMESTAMP (6), 
	"GOUVERNEMENT" NVARCHAR2(2000), 
	"EDITION" NVARCHAR2(2000), 
	"IDENTIFIANT" NVARCHAR2(2000), 
	"DATEFIN" TIMESTAMP (6), 
	"APPELLATION" NVARCHAR2(2000), 
	"NOM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MISC" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"LIFECYCLEPOLICY" VARCHAR2(250 BYTE), 
	"LIFECYCLESTATE" VARCHAR2(250 BYTE)
   ) 


CREATE TABLE "MLBX_FAVORITES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MLBX_GROUPS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MLBX_NOTIFIED_USERS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "FILE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"FILENAME" NVARCHAR2(2000)
   ) 


CREATE TABLE "FSD_DC_COVERAGE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "FSD_DC_CREATOR" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "FSD_DC_NATURE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "FSD_DC_SUBJECTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "UI_TYPES_CONFIGURATION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DENYALLTYPES" NUMBER(1,0)
   ) 


CREATE TABLE "USERSETTINGS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"USER" NVARCHAR2(2000)
   ) 


CREATE TABLE "USERSUBSCRIPTION" 
   (	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"DOCID" VARCHAR2(255 CHAR), 
	"NOTIFICATION" VARCHAR2(255 CHAR), 
	"USERID" VARCHAR2(255 CHAR)
   ) 


CREATE TABLE "VCARD" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"EMAIL" NVARCHAR2(2000), 
	"SOUND" NVARCHAR2(2000), 
	"GEO" NVARCHAR2(2000), 
	"TITLE" NVARCHAR2(2000), 
	"BDAY" NVARCHAR2(2000), 
	"NOTE" NVARCHAR2(2000), 
	"REV" NVARCHAR2(2000), 
	"NICKNAME" NVARCHAR2(2000), 
	"MAILER" NVARCHAR2(2000), 
	"LABEL" NVARCHAR2(2000), 
	"TEL" NVARCHAR2(2000), 
	"UID" NVARCHAR2(2000), 
	"FN" NVARCHAR2(2000), 
	"LOGO" NVARCHAR2(2000), 
	"N" NVARCHAR2(2000), 
	"ORG" NVARCHAR2(2000), 
	"AGENT" NVARCHAR2(2000), 
	"ADR" NVARCHAR2(2000), 
	"KEY" NVARCHAR2(2000), 
	"VERSION" NVARCHAR2(2000), 
	"URL" NVARCHAR2(2000), 
	"TZ" NVARCHAR2(2000), 
	"ROLE" NVARCHAR2(2000), 
	"PHOTO" NVARCHAR2(2000)
   ) 


CREATE TABLE "VER_COAUTEUR" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "VER_COMMISSIONS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "VER_COMMISSIONSAISIEPOURAVIS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "VER_DOSSIERLEGISLATIF" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "VER_LIBELLEANNEXE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "VER_PARLEMENTAIRESUPPLEANTLIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "VER_PARLEMENTAIRETITULAIRELIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "VER_RAPPORTEURLIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "VER_DATELIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" TIMESTAMP (6)
   ) 


CREATE TABLE "VERSION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DATERETRAIT" TIMESTAMP (6), 
	"SUFFRAGEEXPRIME" NUMBER(19,0), 
	"DATEDEMANDE" TIMESTAMP (6), 
	"HORODATAGE" TIMESTAMP (6), 
	"URLDOSSIERAN" NVARCHAR2(2000), 
	"URLDOSSIERSENAT" NVARCHAR2(2000), 
	"COSIGNATAIRE" NVARCHAR2(2000), 
	"NATURERAPPORT" NVARCHAR2(2000), 
	"DATESAISINE" TIMESTAMP (6), 
	"DATE" TIMESTAMP (6), 
	"DATECONSULTATION" TIMESTAMP (6), 
	"MOTIFIRRECEVABILITE" NVARCHAR2(2000), 
	"INTITULE" NVARCHAR2(2000), 
	"DOSSIERCIBLE" NVARCHAR2(2000), 
	"MINORVERSION" NUMBER(19,0), 
	"DATEAR" TIMESTAMP (6), 
	"DATEREFUS" TIMESTAMP (6), 
	"NIVEAULECTURE" NVARCHAR2(2000), 
	"BASELEGALE" NVARCHAR2(2000), 
	"NATURELOI" NVARCHAR2(2000), 
	"ECHEANCE" NVARCHAR2(2000), 
	"PAGEJO" NUMBER(19,0), 
	"DATECADUCITE" TIMESTAMP (6), 
	"DATEENGAGEMENTPROCEDURE" TIMESTAMP (6), 
	"DATEREFUSPROCEDUREENGAGEMENTAN" TIMESTAMP (6), 
	"EVENEMENT" NVARCHAR2(2000), 
	"TITRE" NVARCHAR2(2000), 
	"DATEVOTE" TIMESTAMP (6), 
	"DATECONVOCATION" TIMESTAMP (6), 
	"DATEDESIGNATION" TIMESTAMP (6), 
	"SENSAVIS" NVARCHAR2(2000), 
	"TYPEACTE" NVARCHAR2(2000), 
	"NOR" NVARCHAR2(2000), 
	"NORLOI" NVARCHAR2(2000), 
	"ABSTENTION" NUMBER(19,0), 
	"POSITIONALERTE" NUMBER(1,0), 
	"COMMISSIONSAISIE" NVARCHAR2(2000), 
	"MODIFIEDMETALIST" NVARCHAR2(2000), 
	"MODECREATION" NVARCHAR2(2000), 
	"OBJET" NVARCHAR2(2000), 
	"AUTEUR" NVARCHAR2(2000), 
	"NUMEROPUBLICATION" NVARCHAR2(2000), 
	"ANNEERAPPORT" NUMBER(19,0), 
	"NUMERODEPOTTEXTE" NVARCHAR2(2000), 
	"SORTADOPTION" NVARCHAR2(2000), 
	"REDEPOT" NUMBER(1,0), 
	"RAPPORTPARLEMENT" NVARCHAR2(2000), 
	"VOTEPOUR" NUMBER(19,0), 
	"SENAT" NVARCHAR2(2000), 
	"NUMERORUBRIQUE" NUMBER(19,0), 
	"DATEPUBLICATION" TIMESTAMP (6), 
	"DATEDEPOTTEXTE" TIMESTAMP (6), 
	"DATECONGRES" TIMESTAMP (6), 
	"DATEADOPTION" TIMESTAMP (6), 
	"PIECEJOINTEPRESENTE" NUMBER(1,0), 
	"MAJORVERSION" NUMBER(19,0), 
	"DATEACTE" TIMESTAMP (6), 
	"DATEDISTRIBUTIONELECTRONIQUE" TIMESTAMP (6), 
	"RESULTATCMP" NVARCHAR2(2000), 
	"URLBASELEGALE" NVARCHAR2(2000), 
	"ANNEEJO" NUMBER(19,0), 
	"TYPELOI" NVARCHAR2(2000), 
	"ATTRIBUTIONCOMMISSION" NVARCHAR2(2000), 
	"NUMEROJO" NUMBER(19,0), 
	"VOTECONTRE" NUMBER(19,0), 
	"URLPUBLICATION" NVARCHAR2(2000), 
	"DATEDEPOTRAPPORT" TIMESTAMP (6), 
	"NIVEAULECTURENUMERO" NUMBER(19,0), 
	"DATEPROMULGATION" TIMESTAMP (6), 
	"DATEJO" TIMESTAMP (6), 
	"NUMEROLOI" NVARCHAR2(2000), 
	"DATECMP" TIMESTAMP (6), 
	"DATEREFUSPROCEDUREENG_4039D820" TIMESTAMP (6), 
	"COMMISSIONSAISIEAUFOND" NVARCHAR2(2000), 
	"NUMERODEPOTRAPPORT" NVARCHAR2(2000), 
	"NUMEROTEXTEADOPTE" NVARCHAR2(2000), 
	"COMMENTAIRE" VARCHAR2(2000 CHAR), 
	"IDENTIFIANTMETIER" NVARCHAR2(2000), 
	"NATURE" NVARCHAR2(2000), 
	"VERSIONCOURANTE" NUMBER(1,0), 
	"RECTIFICATIF" NUMBER(1,0), 
	"BULLETINBLANC" NUMBER(19,0), 
	"DATEDECLARATION" TIMESTAMP (6), 
	"DEMANDEVOTE" NUMBER(1,0), 
	"DATEPRESENTATION" TIMESTAMP (6), 
	"DATEAUDITION" TIMESTAMP (6), 
	"FONCTION" NVARCHAR2(2000), 
	"PERSONNE" NVARCHAR2(2000), 
	"DATELETTREPM" TIMESTAMP (6), 
	"ORGANISME" NVARCHAR2(2000), 
	"DATEREFUSASSEMBLEE1" TIMESTAMP (6), 
	"DATECONFERENCEASSEMBLEE2" TIMESTAMP (6), 
	"DECISIONPROCACC" NVARCHAR2(2000), 
	"DATEREFUSENGAGEMENTPROCEDURE" TIMESTAMP (6)
   ) 


CREATE TABLE "VERSIONS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"VERSIONABLEID" VARCHAR2(36 BYTE), 
	"CREATED" TIMESTAMP (6), 
	"LABEL" VARCHAR2(250 BYTE), 
	"DESCRIPTION" NVARCHAR2(2000), 
	"ISLATEST" NUMBER(1,0), 
	"ISLATESTMAJOR" NUMBER(1,0)
   ) 


CREATE TABLE "SORTINFOTYPE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"SORTCOLUMN" NVARCHAR2(2000), 
	"SORTASCENDING" NUMBER(1,0)
   ) 


CREATE TABLE "STATUS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"SERVICEID" NVARCHAR2(2000), 
	"ADMINISTRATIVE_STATUS" NVARCHAR2(2000), 
	"INSTANCEID" NVARCHAR2(2000), 
	"USERLOGIN" NVARCHAR2(2000), 
	"STATUSMESSAGE" NVARCHAR2(2000)
   ) 


CREATE TABLE "STEP_FOLDER" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"EXECUTION" NVARCHAR2(2000)
   ) 


CREATE TABLE "subtopic" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"parent" NVARCHAR2(2000), 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "TAG" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"LABEL" NVARCHAR2(2000)
   ) 


CREATE TABLE "topic" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "TYPE_CONTACT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"EMAIL" NVARCHAR2(2000), 
	"MAILBOXID" NVARCHAR2(2000), 
	"NAME" NVARCHAR2(2000), 
	"SERVICE" NVARCHAR2(2000), 
	"SURNAME" NVARCHAR2(2000)
   ) 


CREATE TABLE "UID" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"UID" NVARCHAR2(2000)
   ) 


CREATE TABLE "UITYPESCONF_ALLOWEDTYPES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "UITYPESCONF_DENIEDTYPES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "JENA_GRAPH" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(4000 BYTE)
   ) 


CREATE TABLE "JENA_G1T0_REIF" 
   (	"SUBJ" NVARCHAR2(250), 
	"PROP" NVARCHAR2(250), 
	"OBJ" NVARCHAR2(250), 
	"GRAPHID" NUMBER(*,0), 
	"STMT" NVARCHAR2(250) NOT NULL ENABLE, 
	"HASTYPE" CHAR(1 BYTE) NOT NULL ENABLE
   ) 


CREATE TABLE "JENA_G1T1_STMT" 
   (	"SUBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"PROP" NVARCHAR2(250) NOT NULL ENABLE, 
	"OBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"GRAPHID" NUMBER(*,0)
   ) 


CREATE TABLE "JENA_G2T0_REIF" 
   (	"SUBJ" NVARCHAR2(250), 
	"PROP" NVARCHAR2(250), 
	"OBJ" NVARCHAR2(250), 
	"GRAPHID" NUMBER(*,0), 
	"STMT" NVARCHAR2(250) NOT NULL ENABLE, 
	"HASTYPE" CHAR(1 BYTE) NOT NULL ENABLE
   ) 


CREATE TABLE "JENA_G2T1_STMT" 
   (	"SUBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"PROP" NVARCHAR2(250) NOT NULL ENABLE, 
	"OBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"GRAPHID" NUMBER(*,0)
   ) 


CREATE TABLE "JENA_G3T0_REIF" 
   (	"SUBJ" NVARCHAR2(250), 
	"PROP" NVARCHAR2(250), 
	"OBJ" NVARCHAR2(250), 
	"GRAPHID" NUMBER(*,0), 
	"STMT" NVARCHAR2(250) NOT NULL ENABLE, 
	"HASTYPE" CHAR(1 BYTE) NOT NULL ENABLE
   ) 


CREATE TABLE "JENA_G3T1_STMT" 
   (	"SUBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"PROP" NVARCHAR2(250) NOT NULL ENABLE, 
	"OBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"GRAPHID" NUMBER(*,0)
   ) 


CREATE TABLE "VOC_CATEGORIE_EVENEMENT" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_RESULTAT_CMP" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_TYPE_ACTE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_TITLE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_BOOLEAN" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_NIVEAU_LECTURE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_NATURE_LOI" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_TYPE_LOI" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_TYPE_PJ" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_NATURE_RAPPORT" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_SORT_ADOPTION" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "JENA_SYS_STMT" 
   (	"SUBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"PROP" NVARCHAR2(250) NOT NULL ENABLE, 
	"OBJ" NVARCHAR2(250) NOT NULL ENABLE, 
	"GRAPHID" NUMBER(*,0)
   ) 


CREATE TABLE "FSD_ECM_PATH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "GOUVERNEMENT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"APPELLATION" NVARCHAR2(2000), 
	"DATEFIN" TIMESTAMP (6), 
	"DATEDEBUT" TIMESTAMP (6), 
	"IDENTIFIANT" NVARCHAR2(2000), 
	"ID_ORGANIGRAMME" VARCHAR2(255 CHAR), 
	"DATE_DEBUT" TIMESTAMP (6), 
	"DATE_FIN" TIMESTAMP (6), 
	"DATE_VERROU" TIMESTAMP (6), 
	"DELETED" NUMBER(1,0), 
	"FUNCTION_READ" VARCHAR2(255 CHAR), 
	"LABEL" VARCHAR2(255 CHAR), 
	"UTILISATEUR_VERROU" VARCHAR2(255 CHAR)
   ) 


CREATE TABLE "HIERARCHY_READ_ACL" 
   (	"ID" VARCHAR2(36 BYTE), 
	"ACL_ID" VARCHAR2(34 BYTE)
   ) 


CREATE TABLE "IDENTITE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"CIVILITE" NVARCHAR2(2000), 
	"IDENTIFIANT" NVARCHAR2(2000), 
	"LIEUNAISSANCE" NVARCHAR2(2000), 
	"PRENOM" NVARCHAR2(2000), 
	"PAYSNAISSANCE" NVARCHAR2(2000), 
	"ACTEUR" NVARCHAR2(2000), 
	"DATEDEBUT" TIMESTAMP (6), 
	"DEPARTEMENTNAISSANCE" NVARCHAR2(2000), 
	"PROPRIETAIRE" NVARCHAR2(2000), 
	"NOM" NVARCHAR2(2000), 
	"DATEFIN" TIMESTAMP (6), 
	"DATENAISSANCE" TIMESTAMP (6)
   ) 


CREATE TABLE "INFO_COMMENTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"NUMBEROFCOMMENTS" NUMBER(19,0)
   ) 


CREATE TABLE "JETON_DOC" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"MESSAGEARNECESSAIRE" NUMBER(1,0), 
	"VERSIONLIFECYCLESTATE" NVARCHAR2(2000), 
	"EVENEMENTEMETTEUR" NVARCHAR2(2000), 
	"MESSAGELIFECYCLESTATE" NVARCHAR2(2000), 
	"VERSIONPRESENCEPIECEJOINTE" NUMBER(1,0), 
	"VERSIONOBJET" NVARCHAR2(2000), 
	"VERSIONHORODATAGE" TIMESTAMP (6), 
	"ID_OWNER" NVARCHAR2(2000), 
	"OBJETREFID" NVARCHAR2(2000), 
	"DOSSIERALERTECOUNT" NUMBER(19,0), 
	"DOSSIERID" NVARCHAR2(2000), 
	"EVENEMENTTYPE" NVARCHAR2(2000), 
	"VERSIONNIVEAULECTURE" NVARCHAR2(2000), 
	"OBJETREFTYPE" NVARCHAR2(2000), 
	"MESSAGETYPE" NVARCHAR2(2000), 
	"VERSIONMINORVERSION" NUMBER(19,0), 
	"WSRETRYLEFT" NUMBER(19,0), 
	"TYPE_WEBSERVICE" NVARCHAR2(2000), 
	"CREATED" TIMESTAMP (6), 
	"ID_JETON" NUMBER(19,0), 
	"EVENEMENTDESTINATAIRE" NVARCHAR2(2000), 
	"ID_DOC" NVARCHAR2(2000), 
	"EVENEMENTID" NVARCHAR2(2000), 
	"NOTIFICATIONTYPE" NVARCHAR2(2000), 
	"VERSIONSENAT" NVARCHAR2(2000), 
	"VERSIONMAJORVERSION" NUMBER(19,0), 
	"EVENEMENTLIFECYCLESTATE" NVARCHAR2(2000), 
	"MESSAGEARNONDONNECOUNT" NUMBER(19,0), 
	"VERSIONNIVEAULECTURENUMERO" NUMBER(19,0), 
	"TYPE_MODIFICATION" NVARCHAR2(200), 
	"ID_COMPLEMENTAIRE" NVARCHAR2(200)
   ) 


CREATE TABLE "JETON_MAITRE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ID_PROPRIETAIRE" NVARCHAR2(2000), 
	"TYPE_WEBSERVICE" NVARCHAR2(2000), 
	"NUMERO_JETON" NUMBER(19,0)
   ) 


CREATE TABLE "JTD_EVENEMENTDESTINATAIRECOPIE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "JTD_MESSAGECORBEILLELIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "LOCALTHEMECONFIG" 
   (	"ID" NUMBER(10,0) NOT NULL ENABLE, 
	"DOCID" VARCHAR2(255 CHAR), 
	"ENGINE" VARCHAR2(255 CHAR), 
	"THEMODE" VARCHAR2(255 CHAR), 
	"PAGE" VARCHAR2(255 CHAR), 
	"PERSPECTIVE" VARCHAR2(255 CHAR), 
	"THEME" VARCHAR2(255 CHAR)
   ) 


CREATE TABLE "CSLK_VISAINTERNES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CVD_SELECTEDLAYOUTCOLUMNS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "DC_CONTRIBUTORS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "DC_SUBJECTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "DEFAULTSETTINGS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"LANGUAGE" NVARCHAR2(2000)
   ) 


CREATE TABLE "DOCRI_PARTICIPATINGDOCUMENTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "documentsLists" 
   (	"id" NVARCHAR2(2000), 
	"ref" NVARCHAR2(2000), 
	"repo" NVARCHAR2(2000), 
	"userid" NVARCHAR2(2000), 
	"listid" NVARCHAR2(2000), 
	"reftype" NUMBER(19,0)
   ) 


CREATE TABLE "DOS_COAUTEUR" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "DOS_COMMISSIONSAISIEPOURAVIS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "DOS_LIBELLEANNEXE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "nature" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_SENS_AVIS" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "PROFIL_UTILISATEUR_SOLON_EPP" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"NOTIFICATIONEMAIL" NUMBER(1,0), 
	"DERNIERCHANGEMENTMOTDEPASSE" TIMESTAMP (6)
   ) 


CREATE TABLE "VOC_MOTIF_IRRECEVABILITE" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_ATTRIBUTION_COMMISSION" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "VOC_RAPPORT_PARLEMENT" 
   (	"id" NVARCHAR2(2000), 
	"obsolete" NUMBER(19,0) DEFAULT 0, 
	"ordering" NUMBER(19,0) DEFAULT 10000000, 
	"label" NVARCHAR2(2000)
   ) 


CREATE TABLE "LOCK_JETON_MAITRE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ID_JETON_MAITRE" VARCHAR2(36 BYTE), 
	"ID_PROPRIETAIRE" NVARCHAR2(2000), 
	"TYPE_WEBSERVICE" NVARCHAR2(2000), 
	"NUMERO_JETON" NUMBER(19,0)
   ) 


CREATE TABLE "CLUSTER_NODES" 
   (	"NODEID" VARCHAR2(25 BYTE), 
	"CREATED" TIMESTAMP (6)
   ) 


CREATE TABLE "CLUSTER_INVALS" 
   (	"NODEID" VARCHAR2(25 BYTE), 
	"ID" VARCHAR2(36 BYTE), 
	"FRAGMENTS" VARCHAR2(4000 BYTE), 
	"KIND" NUMBER(3,0)
   ) 


CREATE TABLE "CSLK_CORBEILLELIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "STFILE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DIGESTSHA512" NVARCHAR2(2000)
   ) 


CREATE TABLE "LOCKS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"OWNER" VARCHAR2(250 BYTE), 
	"CREATED" TIMESTAMP (6)
   ) 


CREATE TABLE "MAIL" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"HTMLTEXT" NVARCHAR2(2000), 
	"MESSAGEID" NVARCHAR2(2000), 
	"TEXT" NVARCHAR2(2000), 
	"SENDER" NVARCHAR2(2000), 
	"SENDING_DATE" TIMESTAMP (6)
   ) 


CREATE TABLE "MAILBOX" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ORIGIN" NVARCHAR2(2000), 
	"LASTSYNCUPDATE" TIMESTAMP (6), 
	"DEFAULTCONFIDENTIALITY" NUMBER(19,0), 
	"MAILBOX_ID" NVARCHAR2(2000), 
	"TYPE" NVARCHAR2(2000), 
	"SYNCHRONIZERID" NVARCHAR2(2000), 
	"AFFILIATED_MAILBOX_ID" NVARCHAR2(2000), 
	"OWNER" NVARCHAR2(2000), 
	"SYNCHRONIZEDSTATE" NVARCHAR2(2000)
   ) 


CREATE TABLE "MAILBOX_ID" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MLBX_PROFILES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "MLBX_USERS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "NAVIGATIONSETTINGS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"HOMEPAGE" NVARCHAR2(2000), 
	"PAGINATION" NVARCHAR2(2000), 
	"FULLNAVIGATION" NUMBER(1,0)
   ) 


CREATE TABLE "NXP_UIDSEQ" 
   (	"SEQ_ID" NUMBER(10,0) NOT NULL ENABLE, 
	"SEQ_INDEX" NUMBER(10,0) NOT NULL ENABLE, 
	"SEQ_KEY" VARCHAR2(255 CHAR) NOT NULL ENABLE
   ) 


CREATE TABLE "ORGANISME" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DATEDEBUT" TIMESTAMP (6), 
	"BASELEGALE" NVARCHAR2(2000), 
	"IDENTIFIANT" NVARCHAR2(2000), 
	"TYPEORGANISME" NVARCHAR2(2000), 
	"DATEFIN" TIMESTAMP (6), 
	"PROPRIETAIRE" NVARCHAR2(2000), 
	"IDCOMMUN" NVARCHAR2(2000), 
	"NOM" NVARCHAR2(2000)
   ) 


CREATE TABLE "PARAMETRE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"UNIT" NVARCHAR2(2000), 
	"VALUE" NVARCHAR2(2000)
   ) 


CREATE TABLE "ALTR_RECIPIENTS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CASE_DOCUMENTSID" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "PARTICIPANTLIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TITLE" NVARCHAR2(2000), 
	"DESCRIPTION" NVARCHAR2(2000), 
	"PLID" NVARCHAR2(2000)
   ) 


CREATE TABLE "PERIODE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DATEDEBUT" TIMESTAMP (6), 
	"TYPEPERIODE" NVARCHAR2(2000), 
	"IDENTIFIANT" NVARCHAR2(2000), 
	"PROPRIETAIRE" NVARCHAR2(2000), 
	"DATEFIN" TIMESTAMP (6), 
	"NUMERO" NVARCHAR2(2000)
   ) 


CREATE TABLE "PIECE_JOINTE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"URL" NVARCHAR2(2000), 
	"TYPEPIECEJOINTE" NVARCHAR2(2000), 
	"NOM" NVARCHAR2(2000), 
	"MODIFIEDMETALIST" NVARCHAR2(2000), 
	"MODIFIEDFILELIST" NVARCHAR2(2000), 
	"DELETEDFILELIST" NVARCHAR2(2000)
   ) 


CREATE TABLE "PJ_PIECEJOINTEFICHIERLIST" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "PROTOCOL" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"EMAIL" NVARCHAR2(2000), 
	"PORT" NVARCHAR2(2000), 
	"HOST" NVARCHAR2(2000), 
	"EMAILS_LIMIT" NUMBER(19,0), 
	"PASSWORD" NVARCHAR2(2000), 
	"SOCKET_FACTORY_FALLBACK" NUMBER(1,0), 
	"SOCKET_FACTORY_PORT" NVARCHAR2(2000), 
	"SSL_PROTOCOLS" NVARCHAR2(2000), 
	"STARTTLS_ENABLE" NUMBER(1,0), 
	"PROTOCOL_TYPE" NVARCHAR2(2000)
   ) 


CREATE TABLE "PROXIES" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TARGETID" VARCHAR2(36 BYTE), 
	"VERSIONABLEID" VARCHAR2(36 BYTE)
   ) 


CREATE TABLE "PUBLISH_SECTIONS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "QUERYNAV" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"SUBJECTS" NVARCHAR2(2000), 
	"COVERAGE" NVARCHAR2(2000)
   ) 


CREATE TABLE "RELATEDTEXTRESOURCE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"RELATEDTEXTID" NVARCHAR2(2000), 
	"RELATEDTEXT" NVARCHAR2(2000)
   ) 


CREATE TABLE "RELATION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"SOURCE" NVARCHAR2(2000), 
	"TARGET" NVARCHAR2(2000)
   ) 


CREATE TABLE "ACLR_USER_MAP" 
   (	"USER_ID" VARCHAR2(34 BYTE) NOT NULL ENABLE, 
	"ACL_ID" VARCHAR2(34 BYTE) NOT NULL ENABLE
   ) 


CREATE TABLE "ACLS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"NAME" VARCHAR2(250 BYTE), 
	"GRANT" NUMBER(1,0), 
	"PERMISSION" VARCHAR2(250 BYTE), 
	"USER" VARCHAR2(250 BYTE), 
	"GROUP" VARCHAR2(250 BYTE)
   ) 


CREATE TABLE "ACTEUR" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"IDENTIFIANT" NVARCHAR2(2000)
   ) 


CREATE TABLE "ACTIONNABLE_CASE_LINK" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"STEPDOCUMENTID" NVARCHAR2(2000), 
	"VALIDATIONOPERATIONCHAINID" NVARCHAR2(2000), 
	"REFUSALOPERATIONCHAINID" NVARCHAR2(2000), 
	"DUEDATE" TIMESTAMP (6), 
	"TASKTYPE" NVARCHAR2(2000), 
	"AUTOMATICVALIDATION" NUMBER(1,0)
   ) 


CREATE TABLE "ADVANCED_SEARCH" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"TITLE" NVARCHAR2(2000), 
	"VALID_MAX" TIMESTAMP (6), 
	"EXPIRED_MIN" TIMESTAMP (6), 
	"FULLTEXT_NONE" NVARCHAR2(2000), 
	"FORMAT" NVARCHAR2(2000), 
	"ISCHECKEDINVERSION" NUMBER(1,0), 
	"VALID_MIN" TIMESTAMP (6), 
	"ISSUED_MAX" TIMESTAMP (6), 
	"EXPIRED_MAX" TIMESTAMP (6), 
	"CREATED_MIN" TIMESTAMP (6), 
	"CREATED_MAX" TIMESTAMP (6), 
	"FULLTEXT_PHRASE" NVARCHAR2(2000), 
	"MODIFIED_MAX" TIMESTAMP (6), 
	"FULLTEXT_ALL" NVARCHAR2(2000), 
	"SORTCOLUMN" NVARCHAR2(2000), 
	"DESCRIPTION" NVARCHAR2(2000), 
	"CURRENTLIFECYCLESTATE" NVARCHAR2(2000), 
	"SOURCE" NVARCHAR2(2000), 
	"SORTASCENDING" NUMBER(1,0), 
	"RIGHTS" NVARCHAR2(2000), 
	"LANGUAGE" NVARCHAR2(2000), 
	"ISSUED_MIN" TIMESTAMP (6), 
	"MODIFIED_MIN" TIMESTAMP (6), 
	"FULLTEXT_ONE_OF" NVARCHAR2(2000)
   ) 


CREATE TABLE "ALERT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DATEVALIDITYBEGIN" TIMESTAMP (6), 
	"ISACTIVATED" NUMBER(1,0), 
	"PERIODICITY" NVARCHAR2(2000), 
	"REQUETEID" NVARCHAR2(2000), 
	"DATEVALIDITYEND" TIMESTAMP (6), 
	"DATEDEMANDECONFIRMATION" TIMESTAMP (6), 
	"HASDEMANDECONFIRMATION" NUMBER(1,0)
   ) 


CREATE TABLE "CMDIST_INITIAL_ACTION_88A481B7" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDIST_INITIAL_COPY_E_B3610C04" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDIST_INITIAL_COPY_I_D6588F7E" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "CMDOC_SENDERS" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"POS" NUMBER(10,0), 
	"ITEM" NVARCHAR2(2000)
   ) 


CREATE TABLE "JENA_PREFIX" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"HEAD" NVARCHAR2(250) NOT NULL ENABLE, 
	"CHKSUM" NUMBER(*,0), 
	"TAIL" BLOB
   ) 


CREATE TABLE "QRTZ_CALENDARS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"CALENDAR_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"CALENDAR" BLOB NOT NULL ENABLE
   ) 


CREATE TABLE "QRTZ_BLOB_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"BLOB_DATA" BLOB
   ) 


CREATE TABLE "JENA_LONG_LIT" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"HEAD" NVARCHAR2(250) NOT NULL ENABLE, 
	"CHKSUM" NUMBER(*,0), 
	"TAIL" BLOB
   ) 


CREATE TABLE "JENA_LONG_URI" 
   (	"ID" NUMBER(*,0) NOT NULL ENABLE, 
	"HEAD" NVARCHAR2(250) NOT NULL ENABLE, 
	"CHKSUM" NUMBER(*,0), 
	"TAIL" BLOB
   ) 


CREATE TABLE "ETAT_APPLICATION" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION_RESTRICTION" NVARCHAR2(2000), 
	"RESTRICTION_ACCES" NUMBER(1,0), 
	"AFFICHAGE" NUMBER(1,0), 
	"MESSAGE" CLOB
   ) 


CREATE TABLE "NXP_LOGS_EXTINFO" 
   (	"DISCRIMINATOR" VARCHAR2(31 CHAR) NOT NULL ENABLE, 
	"LOG_EXTINFO_ID" NUMBER(19,0) NOT NULL ENABLE, 
	"LOG_EXTINFO_STRING" VARCHAR2(255 CHAR), 
	"LOG_EXTINFO_BOOLEAN" NUMBER(1,0), 
	"LOG_EXTINFO_DOUBLE" FLOAT(126), 
	"LOG_EXTINFO_LONG" NUMBER(19,0), 
	"LOG_EXTINFO_DATE" TIMESTAMP (6), 
	"LOG_EXTINFO_BLOB" BLOB
   ) 


CREATE TABLE "QRTZ_JOB_DETAILS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"JOB_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"JOB_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(250 BYTE), 
	"JOB_CLASS_NAME" VARCHAR2(250 BYTE) NOT NULL ENABLE, 
	"IS_DURABLE" VARCHAR2(1 BYTE) NOT NULL ENABLE, 
	"IS_NONCONCURRENT" VARCHAR2(1 BYTE) NOT NULL ENABLE, 
	"IS_UPDATE_DATA" VARCHAR2(1 BYTE) NOT NULL ENABLE, 
	"REQUESTS_RECOVERY" VARCHAR2(1 BYTE) NOT NULL ENABLE, 
	"JOB_DATA" BLOB
   ) 


CREATE TABLE "QRTZ_TRIGGERS" 
   (	"SCHED_NAME" VARCHAR2(120 BYTE) NOT NULL ENABLE, 
	"TRIGGER_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"TRIGGER_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"JOB_NAME" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"JOB_GROUP" VARCHAR2(200 BYTE) NOT NULL ENABLE, 
	"DESCRIPTION" VARCHAR2(250 BYTE), 
	"NEXT_FIRE_TIME" NUMBER(13,0), 
	"PREV_FIRE_TIME" NUMBER(13,0), 
	"PRIORITY" NUMBER(13,0), 
	"TRIGGER_STATE" VARCHAR2(16 BYTE) NOT NULL ENABLE, 
	"TRIGGER_TYPE" VARCHAR2(8 BYTE) NOT NULL ENABLE, 
	"START_TIME" NUMBER(13,0) NOT NULL ENABLE, 
	"END_TIME" NUMBER(13,0), 
	"CALENDAR_NAME" VARCHAR2(200 BYTE), 
	"MISFIRE_INSTR" NUMBER(2,0), 
	"JOB_DATA" BLOB
   ) 


CREATE TABLE "ACLR_USER" 
   (	"USER_ID" VARCHAR2(34 BYTE) NOT NULL ENABLE, 
	"USERS" "NX_STRING_TABLE" 
   ) 
 NESTED TABLE "USERS" STORE AS "ACLR_USER_USERS"
 RETURN AS VALUE


CREATE TABLE "ANCESTORS" 
   (	"HIERARCHY_ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"ANCESTORS" "NX_STRING_TABLE" , 
	"NEED_UPDATE" NUMBER(1,0)
   ) 
 NESTED TABLE "ANCESTORS" STORE AS "ANCESTORS_ANCESTORS"
 RETURN AS VALUE


CREATE TABLE "FULLTEXT" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"JOBID" VARCHAR2(250 BYTE), 
	"FULLTEXT" CLOB, 
	"SIMPLETEXT" NCLOB, 
	"BINARYTEXT" NCLOB, 
	"FULLTEXT_TITLE" CLOB, 
	"SIMPLETEXT_TITLE" NCLOB, 
	"BINARYTEXT_TITLE" NCLOB, 
	"FULLTEXT_DESCRIPTION" CLOB, 
	"SIMPLETEXT_DESCRIPTION" NCLOB, 
	"BINARYTEXT_DESCRIPTION" NCLOB
   ) 


CREATE TABLE "NOTE" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"MIME_TYPE" NVARCHAR2(2000), 
	"NOTE" NCLOB
   ) 


CREATE TABLE "WEBCONTAINER" 
   (	"ID" VARCHAR2(36 BYTE) NOT NULL ENABLE, 
	"USECAPTCHA" NUMBER(1,0), 
	"WELCOMETEXT" NCLOB, 
	"THEME" NVARCHAR2(2000), 
	"ISWEBCONTAINER" NUMBER(1,0), 
	"BASELINE" NVARCHAR2(2000), 
	"TEMPLATE" NVARCHAR2(2000), 
	"THEMEPERSPECTIVE" NVARCHAR2(2000), 
	"THEMEPAGE" NVARCHAR2(2000), 
	"NAME" NVARCHAR2(2000), 
	"MODERATIONTYPE" NVARCHAR2(2000), 
	"URL" NVARCHAR2(2000), 
	"EMAIL" NVARCHAR2(2000)
   ) 


-- new object type path: SCHEMA_EXPORT/FUNCTION/FUNCTION
-- CONNECT SOLONEPP_INTE
CREATE FUNCTION NX_ACCESS_ALLOWED(id VARCHAR2, users NX_STRING_TABLE, permissions NX_STRING_TABLE)
RETURN NUMBER IS
  curid hierarchy.id%TYPE := id;
  newid hierarchy.id%TYPE;
  first BOOLEAN := TRUE;
BEGIN
  WHILE curid IS NOT NULL LOOP
    FOR r IN (SELECT * FROM acls WHERE acls.id = curid ORDER BY acls.pos) LOOP
      IF r.permission MEMBER OF permissions AND r.user MEMBER OF users THEN
        RETURN r."GRANT";
      END IF;
    END LOOP;
    SELECT parentid INTO newid FROM hierarchy WHERE hierarchy.id = curid;
    IF first AND newid IS NULL THEN
      SELECT versionableid INTO newid FROM versions WHERE versions.id = curid;
    END IF;
    first := FALSE;
    curid := newid;
  END LOOP;
  RETURN 0;
END;


CREATE FUNCTION NX_ANCESTORS(ids NX_STRING_TABLE)
RETURN NX_STRING_TABLE PIPELINED
IS
  id hierarchy.id%TYPE;
  curid hierarchy.id%TYPE;
BEGIN
  FOR i IN ids.FIRST .. ids.LAST LOOP
    curid := ids(i);
    LOOP
      SELECT parentid INTO curid FROM hierarchy WHERE hierarchy.id = curid;
      EXIT WHEN curid IS NULL;
      PIPE ROW(curid);
    END LOOP;
  END LOOP;
END;


CREATE FUNCTION nx_get_ancestors(id VARCHAR2)
RETURN NX_STRING_TABLE
IS
  curid hierarchy.id%TYPE := id;
  newid hierarchy.id%TYPE;
  ret NX_STRING_TABLE := NX_STRING_TABLE();
  first BOOLEAN := TRUE;
BEGIN
  WHILE curid IS NOT NULL LOOP
    BEGIN
      SELECT parentid INTO newid FROM hierarchy WHERE hierarchy.id = curid;
    EXCEPTION WHEN NO_DATA_FOUND THEN
      -- curid not in hierarchy at all
      newid := NULL;
    END;
    IF curid IS NOT NULL AND curid <> id THEN
      ret.EXTEND;
      ret(ret.COUNT) := curid;
    END IF;
    IF first AND newid IS NULL THEN
      BEGIN
        SELECT versionableid INTO newid FROM versions WHERE versions.id = curid;
      EXCEPTION
        WHEN NO_DATA_FOUND THEN NULL;
      END;
    END IF;
    first := FALSE;
    curid := newid;
  END LOOP;
  RETURN ret;
END;


CREATE FUNCTION nx_get_read_acl(id VARCHAR2)
RETURN VARCHAR2
-- Compute the merged read acl for a doc id
IS
  curid acls.id%TYPE := id;
  newid acls.id%TYPE;
  acl VARCHAR2(32767) := NULL;
  first BOOLEAN := TRUE;
  sep VARCHAR2(1) := '|';
  read_permissions NX_STRING_TABLE;
BEGIN
  SELECT permission BULK COLLECT INTO read_permissions FROM aclr_permission;
  WHILE curid IS NOT NULL LOOP
    FOR r in (SELECT * FROM acls
                WHERE permission MEMBER OF read_permissions
                AND acls.id = curid
                ORDER BY acls.pos) LOOP
      IF acl IS NOT NULL THEN
         acl := acl || sep;
      END IF;
      acl := acl || CASE WHEN r."GRANT" = 0 THEN '-' ELSE '' END || r."USER";
    END LOOP;
    -- recurse into parent
    BEGIN
      SELECT parentid INTO newid FROM hierarchy WHERE hierarchy.id = curid;
    EXCEPTION WHEN NO_DATA_FOUND THEN
      -- curid not in hierarchy at all
      newid := NULL;
    END;
    IF first AND newid IS NULL THEN
      BEGIN
        SELECT versionableid INTO newid FROM versions WHERE versions.id = curid;
      EXCEPTION
        WHEN NO_DATA_FOUND THEN NULL;
      END;
    END IF;
    first := FALSE;
    curid := newid;
  END LOOP;
  RETURN acl;
END;


CREATE FUNCTION nx_get_read_acls_for(users NX_STRING_TABLE)
RETURN NX_STRING_TABLE
-- List read acl ids for a list of user/groups, using the cache
IS
  PRAGMA AUTONOMOUS_TRANSACTION; -- needed for insert, ok since what we fill is a cache
  user_md5 VARCHAR2(34) := nx_hash_users(users);
  in_cache NUMBER;
  aclids NX_STRING_TABLE;
BEGIN
  SELECT acl_id BULK COLLECT INTO aclids FROM aclr_user_map WHERE user_id = user_md5;
  SELECT COUNT(*) INTO in_cache FROM TABLE(aclids);
  IF in_cache = 0 THEN
    -- dbms_output.put_line('no cache');
    aclids := nx_list_read_acls_for(users);
    -- below INSERT needs the PRAGMA AUTONOMOUS_TRANSACTION
    INSERT INTO aclr_user VALUES (user_md5, users);
    COMMIT;
    INSERT INTO aclr_user_map SELECT user_md5, COLUMN_VALUE FROM TABLE(aclids);
    COMMIT;
  END IF;
  RETURN aclids;
END;


CREATE FUNCTION nx_get_read_acl_id(id VARCHAR2)
RETURN VARCHAR2
IS
BEGIN
  RETURN nx_hash(nx_get_read_acl(id));
END;


CREATE FUNCTION nx_hash(string VARCHAR2)
RETURN VARCHAR2
IS
BEGIN
  -- hash function 1 is MD4 (faster than 2 = MD5)
  RETURN DBMS_CRYPTO.HASH(UTL_I18N.STRING_TO_RAW(string, 'AL32UTF8'), 1);
END;


CREATE FUNCTION nx_hash_users(users NX_STRING_TABLE)
RETURN VARCHAR2
IS
  s VARCHAR2(32767) := NULL;
  sep VARCHAR2(1) := '|';
BEGIN
  -- TODO use canonical (sorted) order for users
  FOR i IN users.FIRST .. users.LAST LOOP
    IF s IS NOT NULL THEN
      s := s || sep;
    END IF;
    s := s || users(i);
  END LOOP;
  RETURN nx_hash(s);
END;


CREATE FUNCTION NX_IN_TREE(id VARCHAR2, baseid VARCHAR2)
RETURN NUMBER IS
  curid hierarchy.id%TYPE := id;
BEGIN
  IF baseid IS NULL OR id IS NULL OR baseid = id THEN
    RETURN 0;
  END IF;
  LOOP
    SELECT parentid INTO curid FROM hierarchy WHERE hierarchy.id = curid;
    IF curid IS NULL THEN
      RETURN 0;
    ELSIF curid = baseid THEN
      RETURN 1;
    END IF;
  END LOOP;
END;


CREATE FUNCTION nx_list_read_acls_for(users NX_STRING_TABLE)
RETURN NX_STRING_TABLE
-- List matching read acl ids for a list of user/groups
IS
  negusers NX_STRING_TABLE := NX_STRING_TABLE();
  aclusers NX_STRING_ARRAY;
  acluser VARCHAR2(32767);
  aclids NX_STRING_TABLE := NX_STRING_TABLE();
  sep VARCHAR2(1) := '|';
BEGIN
  -- Build a black list with negative users
  FOR n IN users.FIRST .. users.LAST LOOP
    negusers.EXTEND;
    negusers(n) := '-' || users(n);
  END LOOP;
  -- find match
  FOR r IN (SELECT acl_id, acl FROM aclr) LOOP
    aclusers := split(r.acl, sep);
    FOR i IN aclusers.FIRST .. aclusers.LAST LOOP
      acluser := aclusers(i);
      IF acluser MEMBER OF users THEN
        -- grant
        aclids.EXTEND;
        aclids(aclids.COUNT) := r.acl_id;
        GOTO next_acl;
      END IF;
      IF acluser MEMBER OF negusers THEN
        -- deny
        GOTO next_acl;
      END IF;
    END LOOP;
    <<next_acl>> NULL;
  END LOOP;
  RETURN aclids;
END;


CREATE FUNCTION NX_NODEID
RETURN VARCHAR
IS
  cursid NUMBER := SYS_CONTEXT('USERENV', 'SID');
  curser NUMBER;
BEGIN
  SELECT SERIAL# INTO curser FROM GV$SESSION WHERE SID = cursid AND INST_ID = SYS_CONTEXT('USERENV', 'INSTANCE');
  RETURN cursid || ',' || curser;
END;


CREATE FUNCTION split(string VARCHAR2, sep VARCHAR2)
RETURN NX_STRING_ARRAY
-- splits a string, order matters
IS
  pos PLS_INTEGER := 1;
  len PLS_INTEGER := NVL(LENGTH(string), 0);
  i PLS_INTEGER;
  res NX_STRING_ARRAY := NX_STRING_ARRAY();
BEGIN
  WHILE pos <= len LOOP
    i := INSTR(string, sep, pos);
    IF i = 0 THEN i := len + 1; END IF;
    res.EXTEND;
    res(res.COUNT) := SUBSTR(string, pos, i - pos);
    pos := i + 1;
  END LOOP;
  RETURN res;
END;


CREATE function SQUIRREL_GET_ERROR_OFFSET (query IN varchar2) return number authid current_user is      l_theCursor     integer default dbms_sql.open_cursor;      l_status        integer; begin          begin          dbms_sql.parse(  l_theCursor, query, dbms_sql.native );          exception                  when others then l_status := dbms_sql.last_error_position;          end;          dbms_sql.close_cursor( l_theCursor );          return l_status; end; 


-- new object type path: SCHEMA_EXPORT/PROCEDURE/PROCEDURE
CREATE PROCEDURE NX_CLUSTER_INVAL(i VARCHAR2, f VARCHAR2, k INTEGER, nid VARCHAR)
IS
BEGIN
  FOR c IN (SELECT nodeid FROM cluster_nodes WHERE nodeid <> nid) LOOP
    INSERT INTO cluster_invals (nodeid, id, fragments, kind) VALUES (c.nodeid, i, f, k);
  END LOOP;
END;


CREATE PROCEDURE nx_init_ancestors
IS
BEGIN
  EXECUTE IMMEDIATE 'TRUNCATE TABLE ancestors';
  INSERT INTO ancestors
    SELECT id, nx_get_ancestors(id), 1
    FROM (SELECT id FROM hierarchy WHERE isproperty=0);
END;


CREATE PROCEDURE nx_rebuild_read_acls
-- Rebuild the read acls tables
IS
BEGIN
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr_user';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr_user_map';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE hierarchy_read_acl';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr_modified';
  INSERT INTO hierarchy_read_acl
    SELECT id, nx_get_read_acl_id(id)
      FROM (SELECT id FROM hierarchy WHERE isproperty = 0);
END;


CREATE PROCEDURE nx_update_read_acls
-- Rebuild only necessary read acls
IS
  update_count PLS_INTEGER;
BEGIN
  --
  -- 1/ New documents, no new ACL
  MERGE INTO hierarchy_read_acl t
    USING (SELECT DISTINCT(m.hierarchy_id) id
            FROM aclr_modified m
            JOIN hierarchy h ON m.hierarchy_id = h.id
            WHERE m.is_new = 1) s
    ON (t.id = s.id)
    WHEN NOT MATCHED THEN 
      INSERT (id, acl_id) VALUES (s.id, nx_get_read_acl_id(s.id));
  DELETE FROM aclr_modified WHERE is_new = 1;
  --
  -- 2/ Compute the new read ACLS for updated documents
  UPDATE hierarchy_read_acl SET acl_id = nx_get_read_acl_id(id) WHERE id IN (
    SELECT h.id
      FROM hierarchy h
      start with h.id IN (select hierarchy_id from aclr_modified)
      connect by prior h.id = h.parentid);
  DELETE FROM aclr_modified;
  --
END;


CREATE PROCEDURE nx_vacuum_read_acls
-- Remove unused read acls entries
IS
BEGIN
  -- nx_vacuum_read_acls vacuuming
  DELETE FROM aclr WHERE acl_id IN (SELECT r.acl_id FROM aclr r
    JOIN hierarchy_read_acl h ON r.acl_id=h.acl_id
    WHERE h.acl_id IS NULL);
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr_user';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr_user_map';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE aclr_modified';
END;


CREATE PROCEDURE "SW_REBUILD_MISSING_READ_ACLS"
-- Rebuild the missing read acls in hierarchy_read_acl
IS
BEGIN
  INSERT INTO hierarchy_read_acl
    SELECT id, nx_get_read_acl_id(id)
      FROM (select h.id from HIERARCHY h left join hierarchy_read_acl hr on h.id = hr.id where h.ISPROPERTY = 0 and hr.id is null);
END;


-- new object type path: SCHEMA_EXPORT/FUNCTION/ALTER_FUNCTION
ALTER FUNCTION "NX_ANCESTORS" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-04-24 15:21:00'


ALTER FUNCTION "NX_GET_READ_ACL" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-04-24 15:21:00'


ALTER FUNCTION "NX_GET_READ_ACL_ID" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-04-24 15:21:00'


ALTER FUNCTION "NX_HASH_USERS" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-04-24 15:21:00'


ALTER FUNCTION "NX_LIST_READ_ACLS_FOR" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-04-24 15:21:01'


ALTER FUNCTION "SPLIT" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-04-24 15:21:01'


-- new object type path: SCHEMA_EXPORT/PROCEDURE/ALTER_PROCEDURE
ALTER PROCEDURE "NX_INIT_ANCESTORS" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-04-24 15:21:01'


ALTER PROCEDURE "NX_UPDATE_READ_ACLS" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-04-24 15:21:01'


ALTER PROCEDURE "SW_REBUILD_MISSING_READ_ACLS" 
  COMPILE 
    PLSQL_OPTIMIZE_LEVEL=  2
    PLSQL_CODE_TYPE=  INTERPRETED
    PLSQL_DEBUG=  FALSE    PLSCOPE_SETTINGS=  'IDENTIFIERS:NONE'
 REUSE SETTINGS TIMESTAMP '2018-04-24 15:21:01'


-- new object type path: SCHEMA_EXPORT/TABLE/INDEX/INDEX
CREATE UNIQUE INDEX "EVT_DOSSIER_IDX" ON "EVENEMENT" ("ID", "DOSSIER") 


CREATE UNIQUE INDEX "EVT_EMETTEUR_IDX" ON "EVENEMENT" ("ID", "EMETTEUR") 


CREATE UNIQUE INDEX "EVT_DESTINATAIRE_IDX" ON "EVENEMENT" ("ID", "DESTINATAIRE") 


CREATE UNIQUE INDEX "JENA_XBND" ON "JENA_PREFIX" ("HEAD", "CHKSUM") 


CREATE UNIQUE INDEX "FACETED_SEARCH_PK" ON "FACETED_SEARCH" ("ID") 


CREATE INDEX "EVT__CBB43539_IDX" ON "EVT_DESTINATAIRECOPIE" ("ID") 


CREATE UNIQUE INDEX "EVENEMENT_PK" ON "EVENEMENT" ("ID") 


CREATE UNIQUE INDEX "EVT_IDEVENEMENT_IDX" ON "EVENEMENT" ("ID", "IDEVENEMENT") 


CREATE INDEX "VER_COMMISSIONS_ID_IDX" ON "VER_COMMISSIONS" ("ID") 


CREATE INDEX "VER_COAUTEUR_ID_IDX" ON "VER_COAUTEUR" ("ID") 


CREATE INDEX "CASE_DOCUMENTSID_ID_IDX" ON "CASE_DOCUMENTSID" ("ID") 


CREATE INDEX "ALTR_RECIPIENTS_ID_IDX" ON "ALTR_RECIPIENTS" ("ID") 


CREATE UNIQUE INDEX "WEBCONTAINER_PK" ON "WEBCONTAINER" ("ID") 


CREATE INDEX "VER_RAPPORTEURLIST_ID_IDX" ON "VER_RAPPORTEURLIST" ("ID") 


CREATE INDEX "VER__F3236048_IDX" ON "VER_PARLEMENTAIRETITULAIRELIST" ("ID") 


CREATE INDEX "VER__85A2530A_IDX" ON "VER_PARLEMENTAIRESUPPLEANTLIST" ("ID") 


CREATE INDEX "VER_LIBELLEANNEXE_ID_IDX" ON "VER_LIBELLEANNEXE" ("ID") 


CREATE INDEX "VER__38D09134_IDX" ON "VER_DOSSIERLEGISLATIF" ("ID") 


CREATE INDEX "VER__46C28D15_IDX" ON "VER_COMMISSIONSAISIEPOURAVIS" ("ID") 


CREATE UNIQUE INDEX "DUBLINCORE_PK" ON "DUBLINCORE" ("ID") 


CREATE UNIQUE INDEX "DOSSIER_PK" ON "DOSSIER" ("ID") 


CREATE UNIQUE INDEX "DOS_DOSSIER_IDX" ON "DOSSIER" ("ID", "IDDOSSIER") 


CREATE INDEX "DOS_RAPPORTEURLIST_ID_IDX" ON "DOS_RAPPORTEURLIST" ("ID") 


CREATE INDEX "DOS_LIBELLEANNEXE_ID_IDX" ON "DOS_LIBELLEANNEXE" ("ID") 


CREATE INDEX "CMDI_FA613CD3_IDX" ON "CMDIST_ALL_COPY_PARTI_21AB3C5B" ("ID") 


CREATE INDEX "CMDI_F03AFF82_IDX" ON "CMDIST_ALL_ACTION_PAR_6B4BBED8" ("ID") 


CREATE INDEX "CLAS_14028D7C_IDX" ON "CLASSIFICATION_TARGETS" ("ID") 


CREATE UNIQUE INDEX "CIRCONSCRIPTION_PK" ON "CIRCONSCRIPTION" ("ID") 


CREATE UNIQUE INDEX "CASE_LINK_PK" ON "CASE_LINK" ("ID") 


CREATE UNIQUE INDEX "MES_ACTIVEVERSIONID_IDX" ON "CASE_LINK" ("ID", "ACTIVEVERSIONID") 


CREATE UNIQUE INDEX "CASE_ITEM_PK" ON "CASE_ITEM" ("ID") 


CREATE UNIQUE INDEX "MES_CASEDOCUMENTID_IDX" ON "CASE_LINK" ("ID", "CASEDOCUMENTID") 


CREATE INDEX "CMDI_E06BC7E3_IDX" ON "CMDIST_INITIAL_ACTION_4CD43708" ("ID") 


CREATE INDEX "HIER_B0ED9092_IDX" ON "HIERARCHY" ("PARENTID", "NAME") 


CREATE UNIQUE INDEX "ALERT_PK" ON "ALERT" ("ID") 


CREATE UNIQUE INDEX "ADVANCED_SEARCH_PK" ON "ADVANCED_SEARCH" ("ID") 


CREATE UNIQUE INDEX "ACTIONNABLE_CASE_LINK_PK" ON "ACTIONNABLE_CASE_LINK" ("ID") 


CREATE UNIQUE INDEX "ACTEUR_PK" ON "ACTEUR" ("ID") 


CREATE INDEX "ACLS_ID_IDX" ON "ACLS" ("ID") 


CREATE INDEX "ACLR_ACL_ID_IDX" ON "ACLR" ("ACL_ID") 


CREATE UNIQUE INDEX "HIERARCHY_PK" ON "HIERARCHY" ("ID") 


CREATE INDEX "HIERARCHY_ISVERSION_IDX" ON "HIERARCHY" ("ISVERSION") 


CREATE INDEX "HIERARCHY_PARENTID_IDX" ON "HIERARCHY" ("PARENTID") 


CREATE INDEX "HIERARCHY_PRIMARYTYPE_IDX" ON "HIERARCHY" ("PRIMARYTYPE") 


CREATE INDEX "HIERARCHY_IDX$$_0F8A0000" ON "HIERARCHY" ("PRIMARYTYPE", "ID") 


CREATE UNIQUE INDEX "CONTENT_VIEW_DISPLAY_PK" ON "CONTENT_VIEW_DISPLAY" ("ID") 


CREATE UNIQUE INDEX "CONTENT_PK" ON "CONTENT" ("ID") 


CREATE UNIQUE INDEX "COMMON_PK" ON "COMMON" ("ID") 


CREATE UNIQUE INDEX "COMMENT_PK" ON "COMMENT" ("ID") 


CREATE INDEX "CMDOC_SENDERS_ID_IDX" ON "CMDOC_SENDERS" ("ID") 


CREATE INDEX "CMDI_5E2F4527_IDX" ON "CMDIST_INITIAL_COPY_I_D6588F7E" ("ID") 


CREATE INDEX "CMDI_A3C38F3F_IDX" ON "CMDIST_INITIAL_COPY_E_B3610C04" ("ID") 


CREATE INDEX "CMDI_1093196C_IDX" ON "CMDIST_INITIAL_ACTION_88A481B7" ("ID") 


CREATE INDEX "MLBX_A22042A4_IDX" ON "MLBX_NOTIFIED_USERS" ("ID") 


CREATE INDEX "MLBX_GROUPS_ID_IDX" ON "MLBX_GROUPS" ("ID") 


CREATE INDEX "MLBX_FAVORITES_ID_IDX" ON "MLBX_FAVORITES" ("ID") 


CREATE UNIQUE INDEX "MISC_PK" ON "MISC" ("ID") 


CREATE UNIQUE INDEX "MINISTERE_PK" ON "MINISTERE" ("ID") 


CREATE UNIQUE INDEX "MEMBRE_GROUPE_PK" ON "MEMBRE_GROUPE" ("ID") 


CREATE UNIQUE INDEX "MANDAT_PK" ON "MANDAT" ("ID") 


CREATE INDEX "MAIL_RECIPIENTS_ID_IDX" ON "MAIL_RECIPIENTS" ("ID") 


CREATE INDEX "MAIL_CC_RECIPIENTS_ID_IDX" ON "MAIL_CC_RECIPIENTS" ("ID") 


CREATE UNIQUE INDEX "IDENTITE_PK" ON "IDENTITE" ("ID") 


CREATE INDEX "HIERARCHY_READ_ACL_ACL_ID_IDX" ON "HIERARCHY_READ_ACL" ("ACL_ID") 


CREATE UNIQUE INDEX "GOUVERNEMENT_PK" ON "GOUVERNEMENT" ("ID") 


CREATE INDEX "FSD_ECM_PATH_ID_IDX" ON "FSD_ECM_PATH" ("ID") 


CREATE INDEX "FSD_DC_SUBJECTS_ID_IDX" ON "FSD_DC_SUBJECTS" ("ID") 


CREATE INDEX "FSD_DC_NATURE_ID_IDX" ON "FSD_DC_NATURE" ("ID") 


CREATE INDEX "FSD_DC_CREATOR_ID_IDX" ON "FSD_DC_CREATOR" ("ID") 


CREATE INDEX "FSD_DC_COVERAGE_ID_IDX" ON "FSD_DC_COVERAGE" ("ID") 


CREATE UNIQUE INDEX "FILE_PK" ON "FILE" ("ID") 


CREATE UNIQUE INDEX "FACETED_SEARCH_DEFAULT_PK" ON "FACETED_SEARCH_DEFAULT" ("ID") 


CREATE INDEX "MAILBOX_ID_ID_IDX" ON "MAILBOX_ID" ("ID") 


CREATE UNIQUE INDEX "MAILBOX_PK" ON "MAILBOX" ("ID") 


CREATE UNIQUE INDEX "MAIL_PK" ON "MAIL" ("ID") 


CREATE UNIQUE INDEX "LOCKS_PK" ON "LOCKS" ("ID") 


CREATE INDEX "JTD__76BD4C61_IDX" ON "JTD_MESSAGECORBEILLELIST" ("ID") 


CREATE INDEX "JTD__F073D423_IDX" ON "JTD_EVENEMENTDESTINATAIRECOPIE" ("ID") 


CREATE UNIQUE INDEX "JETON_MAITRE_PK" ON "JETON_MAITRE" ("ID") 


CREATE UNIQUE INDEX "JETON_DOC_PK" ON "JETON_DOC" ("ID") 


CREATE UNIQUE INDEX "INFO_COMMENTS_PK" ON "INFO_COMMENTS" ("ID") 


CREATE UNIQUE INDEX "ORGANISME_PK" ON "ORGANISME" ("ID") 


CREATE UNIQUE INDEX "NAVIGATIONSETTINGS_PK" ON "NAVIGATIONSETTINGS" ("ID") 


CREATE INDEX "MLBX_USERS_ID_IDX" ON "MLBX_USERS" ("ID") 


CREATE INDEX "MLBX_PROFILES_ID_IDX" ON "MLBX_PROFILES" ("ID") 


CREATE INDEX "PJ_P_5045BB30_IDX" ON "PJ_PIECEJOINTEFICHIERLIST" ("ID") 


CREATE UNIQUE INDEX "PIECE_JOINTE_PK" ON "PIECE_JOINTE" ("ID") 


CREATE UNIQUE INDEX "PERIODE_PK" ON "PERIODE" ("ID") 


CREATE UNIQUE INDEX "PARTICIPANTLIST_PK" ON "PARTICIPANTLIST" ("ID") 


CREATE UNIQUE INDEX "PARAMETRE_PK" ON "PARAMETRE" ("ID") 


CREATE UNIQUE INDEX "ROUTING_TASK_PK" ON "ROUTING_TASK" ("ID") 


CREATE UNIQUE INDEX "REPOSITORIES_PK" ON "REPOSITORIES" ("ID") 


CREATE INDEX "REL_SRCH_ECM_PATH_ID_IDX" ON "REL_SRCH_ECM_PATH" ("ID") 


CREATE UNIQUE INDEX "RELATION_SEARCH_PK" ON "RELATION_SEARCH" ("ID") 


CREATE UNIQUE INDEX "RELATION_PK" ON "RELATION" ("ID") 


CREATE UNIQUE INDEX "RELATEDTEXTRESOURCE_PK" ON "RELATEDTEXTRESOURCE" ("ID") 


CREATE UNIQUE INDEX "QUERYNAV_PK" ON "QUERYNAV" ("ID") 


CREATE INDEX "PUBLISH_SECTIONS_ID_IDX" ON "PUBLISH_SECTIONS" ("ID") 


CREATE INDEX "PROXIES_TARGETID_IDX" ON "PROXIES" ("TARGETID") 


CREATE INDEX "PROXIES_VERSIONABLEID_IDX" ON "PROXIES" ("VERSIONABLEID") 


CREATE UNIQUE INDEX "PROXIES_PK" ON "PROXIES" ("ID") 


CREATE UNIQUE INDEX "PROTOCOL_PK" ON "PROTOCOL" ("ID") 


CREATE UNIQUE INDEX "STEP_FOLDER_PK" ON "STEP_FOLDER" ("ID") 


CREATE UNIQUE INDEX "STATUS_PK" ON "STATUS" ("ID") 


CREATE UNIQUE INDEX "SORTINFOTYPE_PK" ON "SORTINFOTYPE" ("ID") 


CREATE UNIQUE INDEX "SMART_FOLDER_PK" ON "SMART_FOLDER" ("ID") 


CREATE INDEX "SEARCH_SUBJECTS_ID_IDX" ON "SEARCH_SUBJECTS" ("ID") 


CREATE INDEX "SEARCH_SEARCHPATH_ID_IDX" ON "SEARCH_SEARCHPATH" ("ID") 


CREATE INDEX "SEARCH_NATURE_ID_IDX" ON "SEARCH_NATURE" ("ID") 


CREATE INDEX "SEAR_BEE8E2A1_IDX" ON "SEARCH_CURRENTLIFECYCLESTATES" ("ID") 


CREATE INDEX "SEARCH_COVERAGE_ID_IDX" ON "SEARCH_COVERAGE" ("ID") 


CREATE UNIQUE INDEX "VCARD_PK" ON "VCARD" ("ID") 


CREATE UNIQUE INDEX "USERSETTINGS_PK" ON "USERSETTINGS" ("ID") 


CREATE UNIQUE INDEX "UI_TYPES_CONFIGURATION_PK" ON "UI_TYPES_CONFIGURATION" ("ID") 


CREATE INDEX "UITY_E32F2D57_IDX" ON "UITYPESCONF_DENIEDTYPES" ("ID") 


CREATE INDEX "UITY_251B91EA_IDX" ON "UITYPESCONF_ALLOWEDTYPES" ("ID") 


CREATE UNIQUE INDEX "UID_PK" ON "UID" ("ID") 


CREATE UNIQUE INDEX "TYPE_CONTACT_PK" ON "TYPE_CONTACT" ("ID") 


CREATE UNIQUE INDEX "TAG_PK" ON "TAG" ("ID") 


CREATE UNIQUE INDEX "VERSIONS_PK" ON "VERSIONS" ("ID") 


CREATE INDEX "VERS_E6513A3A_IDX" ON "VERSIONS" ("VERSIONABLEID") 


CREATE UNIQUE INDEX "VERSION_PK" ON "VERSION" ("ID") 


CREATE UNIQUE INDEX "VER_HORODATAGE_IDX" ON "VERSION" ("ID", "HORODATAGE") 


CREATE INDEX "JENA_G3T1_STMTXSP" ON "JENA_G3T1_STMT" ("SUBJ", "PROP") 


CREATE INDEX "JENA_G3T1_STMTXO" ON "JENA_G3T1_STMT" ("OBJ") 


CREATE UNIQUE INDEX "JENA_G3T0_REIF_IXSTMT" ON "JENA_G3T0_REIF" ("STMT", "HASTYPE") 


CREATE INDEX "JENA_G3T0_REIFXSP" ON "JENA_G3T0_REIF" ("SUBJ", "PROP") 


CREATE INDEX "JENA_G3T0_REIFXO" ON "JENA_G3T0_REIF" ("OBJ") 


CREATE INDEX "JENA_G2T1_STMTXO" ON "JENA_G2T1_STMT" ("OBJ") 


CREATE INDEX "JENA_G2T1_STMTXSP" ON "JENA_G2T1_STMT" ("SUBJ", "PROP") 


CREATE INDEX "JENA_G2T0_REIFXO" ON "JENA_G2T0_REIF" ("OBJ") 


CREATE UNIQUE INDEX "JENA_G2T0_REIF_IXSTMT" ON "JENA_G2T0_REIF" ("STMT", "HASTYPE") 


CREATE INDEX "JENA_G2T0_REIFXSP" ON "JENA_G2T0_REIF" ("SUBJ", "PROP") 


CREATE INDEX "JENA_G1T1_STMTXSP" ON "JENA_G1T1_STMT" ("SUBJ", "PROP") 


CREATE INDEX "JENA_G1T1_STMTXO" ON "JENA_G1T1_STMT" ("OBJ") 


CREATE INDEX "JENA_G1T0_REIFXO" ON "JENA_G1T0_REIF" ("OBJ") 


CREATE UNIQUE INDEX "JENA_G1T0_REIF_IXSTMT" ON "JENA_G1T0_REIF" ("STMT", "HASTYPE") 


CREATE INDEX "JENA_G1T0_REIFXSP" ON "JENA_G1T0_REIF" ("SUBJ", "PROP") 


CREATE INDEX "JENA_XSP" ON "JENA_SYS_STMT" ("SUBJ", "PROP") 


CREATE INDEX "JENA_XO" ON "JENA_SYS_STMT" ("OBJ") 


CREATE UNIQUE INDEX "LOCK_JETON_MAITRE_PK" ON "LOCK_JETON_MAITRE" ("ID") 


CREATE INDEX "CLUSTER_INVALS_NODEID_IDX" ON "CLUSTER_INVALS" ("NODEID") 


CREATE INDEX "DOS__2B690C3E_IDX" ON "DOS_COMMISSIONSAISIEPOURAVIS" ("ID") 


CREATE INDEX "DOS_COAUTEUR_ID_IDX" ON "DOS_COAUTEUR" ("ID") 


CREATE INDEX "DOCR_C6FD7970_IDX" ON "DOCRI_PARTICIPATINGDOCUMENTS" ("ID") 


CREATE UNIQUE INDEX "DEFAULTSETTINGS_PK" ON "DEFAULTSETTINGS" ("ID") 


CREATE INDEX "DC_SUBJECTS_ID_IDX" ON "DC_SUBJECTS" ("ID") 


CREATE INDEX "DC_CONTRIBUTORS_ID_IDX" ON "DC_CONTRIBUTORS" ("ID") 


CREATE INDEX "CVD__F112AB18_IDX" ON "CVD_SELECTEDLAYOUTCOLUMNS" ("ID") 


CREATE INDEX "CSLK_VISAINTERNES_ID_IDX" ON "CSLK_VISAINTERNES" ("ID") 


CREATE INDEX "CSLK_CORBEILLELIST_ID_IDX" ON "CSLK_CORBEILLELIST" ("ID") 


CREATE INDEX "JTD_MESSAGECORB_IDX$$_0F8A0002" ON "JTD_MESSAGECORBEILLELIST" ("ITEM", "ID") 


CREATE INDEX "ANCESTORS_ANCESTORS_IDX" ON "ANCESTORS_ANCESTORS" ("NESTED_TABLE_ID", "COLUMN_VALUE") 


CREATE UNIQUE INDEX "JENA_XURI" ON "JENA_LONG_URI" ("HEAD", "CHKSUM") 


CREATE UNIQUE INDEX "JENA_XLIT" ON "JENA_LONG_LIT" ("HEAD", "CHKSUM") 


CREATE UNIQUE INDEX "NOTE_PK" ON "NOTE" ("ID") 


CREATE UNIQUE INDEX "FULLTEXT_PK" ON "FULLTEXT" ("ID") 




CREATE INDEX "ANCESTORS_NEED_UPDATE_IDX" ON "ANCESTORS" ("NEED_UPDATE") 


CREATE INDEX "ANCESTORS_HIERARCHY_ID_IDX" ON "ANCESTORS" ("HIERARCHY_ID") 




CREATE INDEX "ACLR_USER_USER_ID_IDX" ON "ACLR_USER" ("USER_ID") 


CREATE INDEX "IDX_ACLRUSERMAP_1" ON "ACLR_USER_MAP" ("USER_ID", "ACL_ID") 


CREATE INDEX "ACLR_USER_MAP_USER_ID_IDX" ON "ACLR_USER_MAP" ("USER_ID") 


CREATE INDEX "ACLR_USER_MAP_ACL_ID_IDX" ON "ACLR_USER_MAP" ("ACL_ID", "USER_ID") 


CREATE INDEX "IDX_ACLRMODIFIED_1" ON "ACLR_MODIFIED" ("HIERARCHY_ID") 


CREATE UNIQUE INDEX "BATCH_LOG_PK" ON "BATCH_LOG" ("ID_LOG") 


CREATE UNIQUE INDEX "BATCH_RESULT_PK" ON "BATCH_RESULT" ("ID_RESULT") 


CREATE UNIQUE INDEX "NOTIFICATIONS_SUIVI_BATCHS_PK" ON "NOTIFICATIONS_SUIVI_BATCHS" ("ID") 


CREATE INDEX "IDX_QRTZ_J_REQ_RECOVERY" ON "QRTZ_JOB_DETAILS" ("SCHED_NAME", "REQUESTS_RECOVERY") 


CREATE INDEX "IDX_QRTZ_J_GRP" ON "QRTZ_JOB_DETAILS" ("SCHED_NAME", "JOB_GROUP") 


CREATE INDEX "IDX_QRTZ_T_J" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "JOB_NAME", "JOB_GROUP") 


CREATE INDEX "IDX_QRTZ_T_JG" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "JOB_GROUP") 


CREATE INDEX "IDX_QRTZ_T_C" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "CALENDAR_NAME") 


CREATE INDEX "IDX_QRTZ_T_G" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_GROUP") 


CREATE INDEX "IDX_QRTZ_T_STATE" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_STATE") 


CREATE INDEX "IDX_QRTZ_T_N_STATE" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP", "TRIGGER_STATE") 


CREATE INDEX "IDX_QRTZ_T_N_G_STATE" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_GROUP", "TRIGGER_STATE") 


CREATE INDEX "IDX_QRTZ_T_NEXT_FIRE_TIME" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "NEXT_FIRE_TIME") 


CREATE INDEX "IDX_QRTZ_T_NFT_ST" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_STATE", "NEXT_FIRE_TIME") 


CREATE INDEX "IDX_QRTZ_T_NFT_MISFIRE" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "MISFIRE_INSTR", "NEXT_FIRE_TIME") 


CREATE INDEX "IDX_QRTZ_T_NFT_ST_MISFIRE" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "MISFIRE_INSTR", "NEXT_FIRE_TIME", "TRIGGER_STATE") 


CREATE INDEX "IDX_QRTZ_T_NFT_ST_MISFIRE_GRP" ON "QRTZ_TRIGGERS" ("SCHED_NAME", "MISFIRE_INSTR", "NEXT_FIRE_TIME", "TRIGGER_GROUP", "TRIGGER_STATE") 


CREATE INDEX "IDX_QRTZ_FT_TRIG_INST_NAME" ON "QRTZ_FIRED_TRIGGERS" ("SCHED_NAME", "INSTANCE_NAME") 


CREATE INDEX "IDX_QRTZ_FT_INST_JOB_REQ_RCVRY" ON "QRTZ_FIRED_TRIGGERS" ("SCHED_NAME", "INSTANCE_NAME", "REQUESTS_RECOVERY") 


CREATE INDEX "IDX_QRTZ_FT_J_G" ON "QRTZ_FIRED_TRIGGERS" ("SCHED_NAME", "JOB_NAME", "JOB_GROUP") 


CREATE INDEX "IDX_QRTZ_FT_JG" ON "QRTZ_FIRED_TRIGGERS" ("SCHED_NAME", "JOB_GROUP") 


CREATE INDEX "IDX_QRTZ_FT_T_G" ON "QRTZ_FIRED_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") 


CREATE INDEX "IDX_QRTZ_FT_TG" ON "QRTZ_FIRED_TRIGGERS" ("SCHED_NAME", "TRIGGER_GROUP") 


CREATE UNIQUE INDEX "ID_INSTITUTION_PK" ON "INSTITUTION" ("ID_ORGANIGRAMME") 


CREATE UNIQUE INDEX "ID_ENTITE_PK" ON "ENTITE" ("ID_ORGANIGRAMME") 


CREATE UNIQUE INDEX "ID_UNITE_PK" ON "UNITE_STRUCTURELLE" ("ID_ORGANIGRAMME") 


CREATE UNIQUE INDEX "ID_POSTE_PK" ON "POSTE" ("ID_ORGANIGRAMME") 


CREATE UNIQUE INDEX "ETAT_APPLICATION_PK" ON "ETAT_APPLICATION" ("ID") 


-- new object type path: SCHEMA_EXPORT/TABLE/CONSTRAINT/CONSTRAINT
ALTER TABLE "SORTINFOTYPE" ADD CONSTRAINT "SORTINFOTYPE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "QRTZ_PAUSED_TRIGGER_GRPS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "HIERARCHY" ADD CONSTRAINT "HIERARCHY_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "DEFAULTSETTINGS" ADD CONSTRAINT "DEFAULTSETTINGS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "DOSSIER" ADD CONSTRAINT "DOSSIER_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "DUBLINCORE" ADD CONSTRAINT "DUBLINCORE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "EVENEMENT" ADD CONSTRAINT "EVENEMENT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FACETED_SEARCH" ADD CONSTRAINT "FACETED_SEARCH_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FACETED_SEARCH_DEFAULT" ADD CONSTRAINT "FACETED_SEARCH_DEFAULT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "LOCK_JETON_MAITRE" ADD CONSTRAINT "LOCK_JETON_MAITRE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "NAVIGATIONSETTINGS" ADD CONSTRAINT "NAVIGATIONSETTINGS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "NXP_UIDSEQ" ADD PRIMARY KEY ("SEQ_ID") ENABLE


ALTER TABLE "NXP_UIDSEQ" ADD UNIQUE ("SEQ_KEY") ENABLE


ALTER TABLE "ORGANISME" ADD CONSTRAINT "ORGANISME_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "PARAMETRE" ADD CONSTRAINT "PARAMETRE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "PROTOCOL" ADD CONSTRAINT "PROTOCOL_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "PROXIES" ADD CONSTRAINT "PROXIES_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "QUERYNAV" ADD CONSTRAINT "QUERYNAV_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "RELATEDTEXTRESOURCE" ADD CONSTRAINT "RELATEDTEXTRESOURCE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "RELATION" ADD CONSTRAINT "RELATION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "RELATION_SEARCH" ADD CONSTRAINT "RELATION_SEARCH_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "REPOSITORIES" ADD CONSTRAINT "REPOSITORIES_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ROUTING_TASK" ADD CONSTRAINT "ROUTING_TASK_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "SMART_FOLDER" ADD CONSTRAINT "SMART_FOLDER_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "PARTICIPANTLIST" ADD CONSTRAINT "PARTICIPANTLIST_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "PERIODE" ADD CONSTRAINT "PERIODE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "PIECE_JOINTE" ADD CONSTRAINT "PIECE_JOINTE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "STATUS" ADD CONSTRAINT "STATUS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "STEP_FOLDER" ADD CONSTRAINT "STEP_FOLDER_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "TAG" ADD CONSTRAINT "TAG_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "TYPE_CONTACT" ADD CONSTRAINT "TYPE_CONTACT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "UID" ADD CONSTRAINT "UID_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "JENA_GRAPH" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "UI_TYPES_CONFIGURATION" ADD CONSTRAINT "UI_TYPES_CONFIGURATION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "USERSETTINGS" ADD CONSTRAINT "USERSETTINGS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "USERSUBSCRIPTION" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "VCARD" ADD CONSTRAINT "VCARD_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "VERSION" ADD CONSTRAINT "VERSION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "VERSIONS" ADD CONSTRAINT "VERSIONS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "NXP_LOGS" ADD PRIMARY KEY ("LOG_ID") ENABLE


ALTER TABLE "NXP_LOGS_EXTINFO" ADD PRIMARY KEY ("LOG_EXTINFO_ID") ENABLE


ALTER TABLE "NXP_LOGS_MAPEXTINFOS" ADD PRIMARY KEY ("LOG_FK", "MAPKEY") ENABLE


ALTER TABLE "NXP_LOGS_MAPEXTINFOS" ADD UNIQUE ("INFO_FK") ENABLE


ALTER TABLE "BATCH_LOG" ADD CONSTRAINT "BATCH_LOG_PK" PRIMARY KEY ("ID_LOG") ENABLE


ALTER TABLE "BATCH_RESULT" ADD CONSTRAINT "BATCH_RESULT_PK" PRIMARY KEY ("ID_RESULT") ENABLE


ALTER TABLE "NOTIFICATIONS_SUIVI_BATCHS" ADD CONSTRAINT "NOTIFICATIONS_SUIVI_BATCHS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "QRTZ_JOB_DETAILS" ADD PRIMARY KEY ("SCHED_NAME", "JOB_NAME", "JOB_GROUP") ENABLE


ALTER TABLE "QRTZ_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_SIMPLE_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_CRON_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_SIMPROP_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_BLOB_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_CALENDARS" ADD PRIMARY KEY ("SCHED_NAME", "CALENDAR_NAME") ENABLE


ALTER TABLE "QRTZ_FIRED_TRIGGERS" ADD PRIMARY KEY ("SCHED_NAME", "ENTRY_ID") ENABLE


ALTER TABLE "QRTZ_SCHEDULER_STATE" ADD PRIMARY KEY ("SCHED_NAME", "INSTANCE_NAME") ENABLE


ALTER TABLE "QRTZ_LOCKS" ADD PRIMARY KEY ("SCHED_NAME", "LOCK_NAME") ENABLE


ALTER TABLE "HISTORIQUE_MDP" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "INSTITUTION" ADD CONSTRAINT "INSTITUTION_PK" PRIMARY KEY ("ID_ORGANIGRAMME") ENABLE


ALTER TABLE "ENTITE" ADD CONSTRAINT "ENTITE_PK" PRIMARY KEY ("ID_ORGANIGRAMME") ENABLE


ALTER TABLE "UNITE_STRUCTURELLE" ADD CONSTRAINT "UNITE_PK" PRIMARY KEY ("ID_ORGANIGRAMME") ENABLE


ALTER TABLE "POSTE" ADD CONSTRAINT "POSTE_PK" PRIMARY KEY ("ID_ORGANIGRAMME") ENABLE


ALTER TABLE "ETAT_APPLICATION" ADD CONSTRAINT "ETAT_APPLICATION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "JENA_LONG_LIT" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "JENA_LONG_URI" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "JENA_PREFIX" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "WEBCONTAINER" ADD CONSTRAINT "WEBCONTAINER_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FULLTEXT" ADD CONSTRAINT "FULLTEXT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "HIERARCHY_READ_ACL" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "NOTE" ADD CONSTRAINT "NOTE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ACTEUR" ADD CONSTRAINT "ACTEUR_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ACTIONNABLE_CASE_LINK" ADD CONSTRAINT "ACTIONNABLE_CASE_LINK_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ADVANCED_SEARCH" ADD CONSTRAINT "ADVANCED_SEARCH_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "ALERT" ADD CONSTRAINT "ALERT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "CASE_ITEM" ADD CONSTRAINT "CASE_ITEM_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "CASE_LINK" ADD CONSTRAINT "CASE_LINK_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "CIRCONSCRIPTION" ADD CONSTRAINT "CIRCONSCRIPTION_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "COMMENT" ADD CONSTRAINT "COMMENT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "COMMON" ADD CONSTRAINT "COMMON_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "CONTENT" ADD CONSTRAINT "CONTENT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "CONTENT_VIEW_DISPLAY" ADD CONSTRAINT "CONTENT_VIEW_DISPLAY_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "FILE" ADD CONSTRAINT "FILE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "GOUVERNEMENT" ADD CONSTRAINT "GOUVERNEMENT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "IDENTITE" ADD CONSTRAINT "IDENTITE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "INFO_COMMENTS" ADD CONSTRAINT "INFO_COMMENTS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "JETON_DOC" ADD CONSTRAINT "JETON_DOC_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "JETON_MAITRE" ADD CONSTRAINT "JETON_MAITRE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "LOCALTHEMECONFIG" ADD PRIMARY KEY ("ID") ENABLE


ALTER TABLE "LOCKS" ADD CONSTRAINT "LOCKS_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "MAIL" ADD CONSTRAINT "MAIL_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "MAILBOX" ADD CONSTRAINT "MAILBOX_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "MANDAT" ADD CONSTRAINT "MANDAT_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "MEMBRE_GROUPE" ADD CONSTRAINT "MEMBRE_GROUPE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "MINISTERE" ADD CONSTRAINT "MINISTERE_PK" PRIMARY KEY ("ID") ENABLE


ALTER TABLE "MISC" ADD CONSTRAINT "MISC_PK" PRIMARY KEY ("ID") ENABLE


-- new object type path: SCHEMA_EXPORT/TABLE/CONSTRAINT/REF_CONSTRAINT
ALTER TABLE "ALTR_RECIPIENTS" ADD CONSTRAINT "ALTR_C630CF28_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CASE_DOCUMENTSID" ADD CONSTRAINT "CASE_99AB76F4_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CASE_ITEM" ADD CONSTRAINT "CASE_ITEM_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CASE_LINK" ADD CONSTRAINT "CASE_LINK_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CIRCONSCRIPTION" ADD CONSTRAINT "CIRC_6EAC1715_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CLASSIFICATION_TARGETS" ADD CONSTRAINT "CLAS_4898D61D_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_ALL_ACTION_PAR_6B4BBED8" ADD CONSTRAINT "CMDI_7B09D466_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_ALL_COPY_PARTI_21AB3C5B" ADD CONSTRAINT "CMDI_516D49CB_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_INITIAL_ACTION_4CD43708" ADD CONSTRAINT "CMDI_DBF5EC6D_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ACLS" ADD CONSTRAINT "ACLS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ACTEUR" ADD CONSTRAINT "ACTEUR_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ACTIONNABLE_CASE_LINK" ADD CONSTRAINT "ACTI_D69A363C_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ADVANCED_SEARCH" ADD CONSTRAINT "ADVA_102157D6_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ALERT" ADD CONSTRAINT "ALERT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_INITIAL_ACTION_88A481B7" ADD CONSTRAINT "CMDI_248596C2_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_INITIAL_COPY_E_B3610C04" ADD CONSTRAINT "CMDI_ED3FDFAC_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDIST_INITIAL_COPY_I_D6588F7E" ADD CONSTRAINT "CMDI_3EE0F322_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CMDOC_SENDERS" ADD CONSTRAINT "CMDOC_SENDERS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "COMMENT" ADD CONSTRAINT "COMMENT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "COMMON" ADD CONSTRAINT "COMMON_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CONTENT" ADD CONSTRAINT "CONTENT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CONTENT_VIEW_DISPLAY" ADD CONSTRAINT "CONT_0FEB3678_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MAIL_CC_RECIPIENTS" ADD CONSTRAINT "MAIL_0700D9E5_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MAIL_RECIPIENTS" ADD CONSTRAINT "MAIL_926B433B_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MANDAT" ADD CONSTRAINT "MANDAT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MEMBRE_GROUPE" ADD CONSTRAINT "MEMBRE_GROUPE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MINISTERE" ADD CONSTRAINT "MINISTERE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MISC" ADD CONSTRAINT "MISC_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MLBX_FAVORITES" ADD CONSTRAINT "MLBX_FAVORITES_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MLBX_GROUPS" ADD CONSTRAINT "MLBX_GROUPS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MLBX_NOTIFIED_USERS" ADD CONSTRAINT "MLBX_9887A51E_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FILE" ADD CONSTRAINT "FILE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FSD_DC_COVERAGE" ADD CONSTRAINT "FSD__A5BA3E76_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FSD_DC_CREATOR" ADD CONSTRAINT "FSD_DC_CREATOR_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FSD_DC_NATURE" ADD CONSTRAINT "FSD_DC_NATURE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FSD_DC_SUBJECTS" ADD CONSTRAINT "FSD__56431C6C_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FSD_ECM_PATH" ADD CONSTRAINT "FSD_ECM_PATH_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "GOUVERNEMENT" ADD CONSTRAINT "GOUVERNEMENT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "HIERARCHY_READ_ACL" ADD CONSTRAINT "HIERARCHY_READ_ACL_ID_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "IDENTITE" ADD CONSTRAINT "IDENTITE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "INFO_COMMENTS" ADD CONSTRAINT "INFO_COMMENTS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "JETON_DOC" ADD CONSTRAINT "JETON_DOC_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "JETON_MAITRE" ADD CONSTRAINT "JETON_MAITRE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "JTD_EVENEMENTDESTINATAIRECOPIE" ADD CONSTRAINT "JTD__AB1D5F71_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "JTD_MESSAGECORBEILLELIST" ADD CONSTRAINT "JTD__C56DE9F6_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MAIL" ADD CONSTRAINT "MAIL_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MAILBOX" ADD CONSTRAINT "MAILBOX_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MAILBOX_ID" ADD CONSTRAINT "MAILBOX_ID_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MLBX_PROFILES" ADD CONSTRAINT "MLBX_PROFILES_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "MLBX_USERS" ADD CONSTRAINT "MLBX_USERS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "NAVIGATIONSETTINGS" ADD CONSTRAINT "NAVI_9BCB26B1_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ORGANISME" ADD CONSTRAINT "ORGANISME_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PARAMETRE" ADD CONSTRAINT "PARAMETRE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PARTICIPANTLIST" ADD CONSTRAINT "PART_E4211619_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PERIODE" ADD CONSTRAINT "PERIODE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PIECE_JOINTE" ADD CONSTRAINT "PIECE_JOINTE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PJ_PIECEJOINTEFICHIERLIST" ADD CONSTRAINT "PJ_P_FD996EB5_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PROTOCOL" ADD CONSTRAINT "PROTOCOL_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PROXIES" ADD CONSTRAINT "PROXIES_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PROXIES" ADD CONSTRAINT "PROXIES_TARGETID_HIERARCHY_FK" FOREIGN KEY ("TARGETID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "PUBLISH_SECTIONS" ADD CONSTRAINT "PUBL_D888C7AF_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "QUERYNAV" ADD CONSTRAINT "QUERYNAV_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "RELATEDTEXTRESOURCE" ADD CONSTRAINT "RELA_835C3B64_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "RELATION" ADD CONSTRAINT "RELATION_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "RELATION_SEARCH" ADD CONSTRAINT "RELA_30BD7D76_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REL_SRCH_ECM_PATH" ADD CONSTRAINT "REL__E3A6C2F4_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "REPOSITORIES" ADD CONSTRAINT "REPOSITORIES_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ROUTING_TASK" ADD CONSTRAINT "ROUTING_TASK_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SEARCH_COVERAGE" ADD CONSTRAINT "SEAR_34319F67_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SEARCH_CURRENTLIFECYCLESTATES" ADD CONSTRAINT "SEAR_1B5AF6D2_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SEARCH_NATURE" ADD CONSTRAINT "SEARCH_NATURE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SEARCH_SEARCHPATH" ADD CONSTRAINT "SEAR_8976FDB6_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SEARCH_SUBJECTS" ADD CONSTRAINT "SEAR_110E4D75_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SMART_FOLDER" ADD CONSTRAINT "SMART_FOLDER_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "SORTINFOTYPE" ADD CONSTRAINT "SORTINFOTYPE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "STATUS" ADD CONSTRAINT "STATUS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "STEP_FOLDER" ADD CONSTRAINT "STEP_FOLDER_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "TAG" ADD CONSTRAINT "TAG_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "TYPE_CONTACT" ADD CONSTRAINT "TYPE_CONTACT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "UID" ADD CONSTRAINT "UID_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "UITYPESCONF_ALLOWEDTYPES" ADD CONSTRAINT "UITY_694B86C3_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "UITYPESCONF_DENIEDTYPES" ADD CONSTRAINT "UITY_6E2ADC3E_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "UI_TYPES_CONFIGURATION" ADD CONSTRAINT "UI_T_F6D8BC6A_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "USERSETTINGS" ADD CONSTRAINT "USERSETTINGS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VCARD" ADD CONSTRAINT "VCARD_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VER_COAUTEUR" ADD CONSTRAINT "VER_COAUTEUR_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VER_COMMISSIONS" ADD CONSTRAINT "VER__987C21AD_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VER_COMMISSIONSAISIEPOURAVIS" ADD CONSTRAINT "VER__F7CDA923_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VER_DOSSIERLEGISLATIF" ADD CONSTRAINT "VER__91ACB963_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VER_LIBELLEANNEXE" ADD CONSTRAINT "VER__06242745_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VER_PARLEMENTAIRESUPPLEANTLIST" ADD CONSTRAINT "VER__4EF3FF2F_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VER_PARLEMENTAIRETITULAIRELIST" ADD CONSTRAINT "VER__39A2A43A_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VER_RAPPORTEURLIST" ADD CONSTRAINT "VER__DCED4993_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VER_DATELIST" ADD CONSTRAINT "VER_DATELIST_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VERSION" ADD CONSTRAINT "VERSION_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VERSIONS" ADD CONSTRAINT "VERSIONS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "LOCK_JETON_MAITRE" ADD CONSTRAINT "LJM_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "LOCK_JETON_MAITRE" ADD CONSTRAINT "LJM_ID_JETON_MAITRE_FK" FOREIGN KEY ("ID_JETON_MAITRE")
	  REFERENCES "JETON_MAITRE" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CSLK_CORBEILLELIST" ADD CONSTRAINT "CSLK_7AFC8028_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CSLK_VISAINTERNES" ADD CONSTRAINT "CSLK_9934A1E0_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "CVD_SELECTEDLAYOUTCOLUMNS" ADD CONSTRAINT "CVD__98E4BA2C_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DC_CONTRIBUTORS" ADD CONSTRAINT "DC_C_4015E4A8_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DC_SUBJECTS" ADD CONSTRAINT "DC_SUBJECTS_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DEFAULTSETTINGS" ADD CONSTRAINT "DEFA_795A5897_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DOCRI_PARTICIPATINGDOCUMENTS" ADD CONSTRAINT "DOCR_336D9931_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DOS_COAUTEUR" ADD CONSTRAINT "DOS_COAUTEUR_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DOS_COMMISSIONSAISIEPOURAVIS" ADD CONSTRAINT "DOS__71EC1037_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DOS_LIBELLEANNEXE" ADD CONSTRAINT "DOS__F71C1242_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DOS_RAPPORTEURLIST" ADD CONSTRAINT "DOS__3E1C4D29_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DOS_DATELIST" ADD CONSTRAINT "DOS_DATELIST_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DOSSIER" ADD CONSTRAINT "DOSSIER_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DUBLINCORE" ADD CONSTRAINT "DUBLINCORE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "EVENEMENT" ADD CONSTRAINT "EVENEMENT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "EVT_DESTINATAIRECOPIE" ADD CONSTRAINT "EVT__CCE2D73A_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FACETED_SEARCH" ADD CONSTRAINT "FACETED_SEARCH_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FACETED_SEARCH_DEFAULT" ADD CONSTRAINT "FACE_D7EAAFD8_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "HIERARCHY" ADD CONSTRAINT "HIER_7A50B200_FK" FOREIGN KEY ("PARENTID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "BATCH_RESULT" ADD CONSTRAINT "BR_ID_BATCH_LOG_FK" FOREIGN KEY ("ID_LOG")
	  REFERENCES "BATCH_LOG" ("ID_LOG") ON DELETE CASCADE ENABLE


ALTER TABLE "NOTIFICATIONS_SUIVI_BATCHS" ADD CONSTRAINT "NOTI_B002CA82_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "NSB_RECEIVERMAILLIST" ADD CONSTRAINT "NSB__021DEF94_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "QRTZ_SIMPLE_TRIGGERS" ADD FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP")
	  REFERENCES "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_CRON_TRIGGERS" ADD FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP")
	  REFERENCES "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_SIMPROP_TRIGGERS" ADD FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP")
	  REFERENCES "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "NXP_LOGS_MAPEXTINFOS" ADD CONSTRAINT "FKF96F609C4EA9779" FOREIGN KEY ("INFO_FK")
	  REFERENCES "NXP_LOGS_EXTINFO" ("LOG_EXTINFO_ID") ENABLE


ALTER TABLE "NXP_LOGS_MAPEXTINFOS" ADD CONSTRAINT "FKF96F609E7AC49AA" FOREIGN KEY ("LOG_FK")
	  REFERENCES "NXP_LOGS" ("LOG_ID") ENABLE


ALTER TABLE "DOS_COMMISSIONS" ADD CONSTRAINT "DOS_SENSAVIS_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "VER_GROUPEPARLEMENTAIRE" ADD CONSTRAINT "HIER_VER_GP_PARL_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "DOS_GROUPEPARLEMENTAIRE" ADD CONSTRAINT "HIER_DOS_GP_PARL_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "QRTZ_BLOB_TRIGGERS" ADD FOREIGN KEY ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP")
	  REFERENCES "QRTZ_TRIGGERS" ("SCHED_NAME", "TRIGGER_NAME", "TRIGGER_GROUP") ENABLE


ALTER TABLE "QRTZ_TRIGGERS" ADD FOREIGN KEY ("SCHED_NAME", "JOB_NAME", "JOB_GROUP")
	  REFERENCES "QRTZ_JOB_DETAILS" ("SCHED_NAME", "JOB_NAME", "JOB_GROUP") ENABLE


ALTER TABLE "ANCESTORS" ADD CONSTRAINT "ANCESTORS_HIERARCHY_ID_FK" FOREIGN KEY ("HIERARCHY_ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "FULLTEXT" ADD CONSTRAINT "FULLTEXT_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "NOTE" ADD CONSTRAINT "NOTE_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "WEBCONTAINER" ADD CONSTRAINT "WEBCONTAINER_ID_HIERARCHY_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


ALTER TABLE "ETAT_APPLICATION" ADD CONSTRAINT "ETAT_APPLICATION_FK" FOREIGN KEY ("ID")
	  REFERENCES "HIERARCHY" ("ID") ON DELETE CASCADE ENABLE


-- new object type path: SCHEMA_EXPORT/TABLE/TRIGGER
-- CONNECT SOLONEPP_INTE
CREATE TRIGGER nx_trig_hierarchy_insert
  AFTER INSERT ON hierarchy
  FOR EACH ROW
    WHEN (NEW.isproperty = 0) BEGIN
  INSERT INTO aclr_modified (hierarchy_id, is_new) VALUES (:NEW.id, 1);
END;


ALTER TRIGGER "NX_TRIG_HIERARCHY_INSERT" ENABLE


CREATE TRIGGER nx_trig_aclr_modified
  AFTER INSERT ON aclr
  FOR EACH ROW
    WHEN (NEW.acl_id IS NOT NULL) DECLARE
  negusers NX_STRING_TABLE;
  acl NX_STRING_ARRAY;
  ace VARCHAR(4000);
  sep VARCHAR2(1) := '|';
BEGIN
  FOR r IN (SELECT * FROM ACLR_USER) LOOP
    -- Build a black list with negative users
    negusers := NX_STRING_TABLE();
    FOR i IN r.users.FIRST .. r.users.LAST LOOP
      negusers.EXTEND;
      negusers(i) := '-' || r.users(i);
    END LOOP;
    acl := split(:NEW.acl, sep);
    FOR i IN acl.FIRST .. acl.LAST LOOP
      ace := acl(i);
      IF ace MEMBER OF r.users THEN
         -- GRANTED
         INSERT INTO ACLR_USER_MAP SELECT r.user_id, :NEW.acl_id FROM DUAL
         WHERE NOT EXISTS (SELECT 1 FROM ACLR_USER_MAP WHERE user_id=r.user_id AND acl_id = :NEW.acl_id);
         GOTO next_user;
      END IF;
      IF ace MEMBER OF negusers THEN
         -- DENIED
         GOTO next_user;
      END IF;
    END LOOP;
    <<next_user>> NULL;
  END LOOP;
END;


ALTER TRIGGER "NX_TRIG_ACLR_MODIFIED" ENABLE


CREATE TRIGGER nx_trig_ancestors_insert
  AFTER INSERT ON hierarchy
  FOR EACH ROW
    WHEN (NEW.isproperty = 0 AND NEW.parentid IS NOT NULL) BEGIN
  INSERT INTO ANCESTORS VALUES(:NEW.id, NULL, 1);
END;


ALTER TRIGGER "NX_TRIG_ANCESTORS_INSERT" DISABLE


CREATE TRIGGER nx_trig_ancestors_process
  AFTER INSERT OR UPDATE ON hierarchy
  -- statement level is required to be able to read hierarchy table with updated values
BEGIN
  UPDATE ancestors SET ancestors = nx_get_ancestors(hierarchy_id), need_update = NULL
    WHERE need_update = 1;
END;


ALTER TRIGGER "NX_TRIG_ANCESTORS_PROCESS" DISABLE


CREATE TRIGGER nx_trig_acls_modified
  AFTER INSERT OR UPDATE OR DELETE ON acls
  FOR EACH ROW
-- Trigger to log change in the acls table
DECLARE
  doc_id acls.id%TYPE := CASE WHEN DELETING THEN :OLD.id ELSE :NEW.id END;
BEGIN
  INSERT INTO aclr_modified (hierarchy_id, is_new) VALUES (doc_id, 0);
END;


ALTER TRIGGER "NX_TRIG_ACLS_MODIFIED" ENABLE


CREATE TRIGGER nx_trig_hier_read_acl_mod
  AFTER INSERT OR UPDATE ON hierarchy_read_acl
  FOR EACH ROW
    WHEN (NEW.acl_id IS NOT NULL) BEGIN
  MERGE INTO aclr USING DUAL
    ON (aclr.acl_id = :NEW.acl_id)
    WHEN NOT MATCHED THEN
    INSERT (acl_id, acl) VALUES (:NEW.acl_id, nx_get_read_acl(:NEW.id));
END;


ALTER TRIGGER "NX_TRIG_HIER_READ_ACL_MOD" ENABLE


CREATE TRIGGER nx_trig_ancestors_update
  AFTER UPDATE ON hierarchy
  FOR EACH ROW   WHEN (NEW.isproperty = 0 AND NEW.parentid <> OLD.parentid) BEGIN
  UPDATE ancestors SET ancestors = NULL, need_update = 1
    WHERE hierarchy_id IN (SELECT hierarchy_id FROM ancestors a
                           WHERE :NEW.id MEMBER OF a.ancestors OR hierarchy_id = :NEW.id);
END;


ALTER TRIGGER "NX_TRIG_ANCESTORS_UPDATE" DISABLE


CREATE TRIGGER NX_TRIG_FT_UPDATE
  BEFORE INSERT OR UPDATE ON "FULLTEXT"
  FOR EACH ROW
BEGIN
   :NEW."FULLTEXT" := :NEW."SIMPLETEXT" || :NEW."BINARYTEXT"; 
 :NEW."FULLTEXT_TITLE" := :NEW."SIMPLETEXT_TITLE" || :NEW."BINARYTEXT_TITLE"; 
 :NEW."FULLTEXT_DESCRIPTION" := :NEW."SIMPLETEXT_DESCRIPTION" || :NEW."BINARYTEXT_DESCRIPTION"; 
END;


ALTER TRIGGER "NX_TRIG_FT_UPDATE" ENABLE


CREATE TRIGGER nx_trig_hierarchy_update
  AFTER UPDATE ON hierarchy
  FOR EACH ROW
    WHEN (NEW.isproperty = 0 AND NEW.parentid <> OLD.parentid) BEGIN
  INSERT INTO aclr_modified (hierarchy_id, is_new) VALUES (:NEW.id, 0);
END;


ALTER TRIGGER "NX_TRIG_HIERARCHY_UPDATE" ENABLE


-- new object type path: SCHEMA_EXPORT/TABLE/INDEX/DOMAIN_INDEX/INDEX
BEGIN 
ctxsys.driimp.create_index('FULLTEXT_FULLTEXT_IDX','FULLTEXT',USER,
'ID','1','FULLTEXT','112',
'0','23396','8130','23397',
NULL, NULL, NULL, 0,'TQY','ON COMMIT','12582912',NULL, NULL, NULL);
ctxsys.driimp.set_object('DATASTORE','DIRECT_DATASTORE',0);
ctxsys.driimp.set_object('DATATYPE','LOB_DATATYPE',0);
ctxsys.driimp.set_object('DATAX','SYNCH_DATAX',0);
ctxsys.driimp.set_object('FILTER','NULL_FILTER',0);
ctxsys.driimp.set_object('SECTION_GROUP','NULL_SECTION_GROUP',0);
ctxsys.driimp.set_object('LEXER','BASIC_LEXER',0);
ctxsys.driimp.set_object('WORDLIST','BASIC_WORDLIST',2);
ctxsys.driimp.set_value('STEMMER','1');
ctxsys.driimp.set_value('FUZZY_MATCH','1');
ctxsys.driimp.set_object('STOPLIST','BASIC_STOPLIST',114);
ctxsys.driimp.set_value('STOP_WORD','Mr');
ctxsys.driimp.set_value('STOP_WORD','Mrs');
ctxsys.driimp.set_value('STOP_WORD','Ms');
ctxsys.driimp.set_value('STOP_WORD','a');
ctxsys.driimp.set_value('STOP_WORD','all');
ctxsys.driimp.set_value('STOP_WORD','almost');
ctxsys.driimp.set_value('STOP_WORD','also');
ctxsys.driimp.set_value('STOP_WORD','although');
ctxsys.driimp.set_value('STOP_WORD','an');
ctxsys.driimp.set_value('STOP_WORD','and');
ctxsys.driimp.set_value('STOP_WORD','any');
ctxsys.driimp.set_value('STOP_WORD','are');
ctxsys.driimp.set_value('STOP_WORD','as');
ctxsys.driimp.set_value('STOP_WORD','at');
ctxsys.driimp.set_value('STOP_WORD','be');
ctxsys.driimp.set_value('STOP_WORD','because');
ctxsys.driimp.set_value('STOP_WORD','been');
ctxsys.driimp.set_value('STOP_WORD','both');
ctxsys.driimp.set_value('STOP_WORD','but');
ctxsys.driimp.set_value('STOP_WORD','by');
ctxsys.driimp.set_value('STOP_WORD','can');
ctxsys.driimp.set_value('STOP_WORD','could');
ctxsys.driimp.set_value('STOP_WORD','d');
ctxsys.driimp.set_value('STOP_WORD','did');
ctxsys.driimp.set_value('STOP_WORD','do');
ctxsys.driimp.set_value('STOP_WORD','does');
ctxsys.driimp.set_value('STOP_WORD','either');
ctxsys.driimp.set_value('STOP_WORD','for');
ctxsys.driimp.set_value('STOP_WORD','from');
ctxsys.driimp.set_value('STOP_WORD','had');
ctxsys.driimp.set_value('STOP_WORD','has');
ctxsys.driimp.set_value('STOP_WORD','have');
ctxsys.driimp.set_value('STOP_WORD','having');
ctxsys.driimp.set_value('STOP_WORD','he');
ctxsys.driimp.set_value('STOP_WORD','her');
ctxsys.driimp.set_value('STOP_WORD','here');
ctxsys.driimp.set_value('STOP_WORD','hers');
ctxsys.driimp.set_value('STOP_WORD','him');
ctxsys.driimp.set_value('STOP_WORD','his');
ctxsys.driimp.set_value('STOP_WORD','how');
ctxsys.driimp.set_value('STOP_WORD','however');
ctxsys.driimp.set_value('STOP_WORD','i');
ctxsys.driimp.set_value('STOP_WORD','if');
ctxsys.driimp.set_value('STOP_WORD','in');
ctxsys.driimp.set_value('STOP_WORD','into');
ctxsys.driimp.set_value('STOP_WORD','is');
ctxsys.driimp.set_value('STOP_WORD','it');
ctxsys.driimp.set_value('STOP_WORD','its');
ctxsys.driimp.set_value('STOP_WORD','just');
ctxsys.driimp.set_value('STOP_WORD','ll');
ctxsys.driimp.set_value('STOP_WORD','me');
ctxsys.driimp.set_value('STOP_WORD','might');
ctxsys.driimp.set_value('STOP_WORD','my');
ctxsys.driimp.set_value('STOP_WORD','no');
ctxsys.driimp.set_value('STOP_WORD','non');
ctxsys.driimp.set_value('STOP_WORD','nor');
ctxsys.driimp.set_value('STOP_WORD','not');
ctxsys.driimp.set_value('STOP_WORD','of');
ctxsys.driimp.set_value('STOP_WORD','on');
ctxsys.driimp.set_value('STOP_WORD','one');
ctxsys.driimp.set_value('STOP_WORD','only');
ctxsys.driimp.set_value('STOP_WORD','onto');
ctxsys.driimp.set_value('STOP_WORD','or');
ctxsys.driimp.set_value('STOP_WORD','our');
ctxsys.driimp.set_value('STOP_WORD','ours');
ctxsys.driimp.set_value('STOP_WORD','s');
ctxsys.driimp.set_value('STOP_WORD','shall');
ctxsys.driimp.set_value('STOP_WORD','she');
ctxsys.driimp.set_value('STOP_WORD','should');
ctxsys.driimp.set_value('STOP_WORD','since');
ctxsys.driimp.set_value('STOP_WORD','so');
ctxsys.driimp.set_value('STOP_WORD','some');
ctxsys.driimp.set_value('STOP_WORD','still');
ctxsys.driimp.set_value('STOP_WORD','such');
ctxsys.driimp.set_value('STOP_WORD','t');
ctxsys.driimp.set_value('STOP_WORD','than');
ctxsys.driimp.set_value('STOP_WORD','that');
ctxsys.driimp.set_value('STOP_WORD','the');
ctxsys.driimp.set_value('STOP_WORD','their');
ctxsys.driimp.set_value('STOP_WORD','them');
ctxsys.driimp.set_value('STOP_WORD','then');
ctxsys.driimp.set_value('STOP_WORD','there');
ctxsys.driimp.set_value('STOP_WORD','therefore');
ctxsys.driimp.set_value('STOP_WORD','these');
ctxsys.driimp.set_value('STOP_WORD','they');
ctxsys.driimp.set_value('STOP_WORD','this');
ctxsys.driimp.set_value('STOP_WORD','those');
ctxsys.driimp.set_value('STOP_WORD','though');
ctxsys.driimp.set_value('STOP_WORD','through');
ctxsys.driimp.set_value('STOP_WORD','thus');
ctxsys.driimp.set_value('STOP_WORD','to');
ctxsys.driimp.set_value('STOP_WORD','too');
ctxsys.driimp.set_value('STOP_WORD','until');
ctxsys.driimp.set_value('STOP_WORD','ve');
ctxsys.driimp.set_value('STOP_WORD','very');
ctxsys.driimp.set_value('STOP_WORD','was');
ctxsys.driimp.set_value('STOP_WORD','we');
ctxsys.driimp.set_value('STOP_WORD','were');
ctxsys.driimp.set_value('STOP_WORD','what');
ctxsys.driimp.set_value('STOP_WORD','when');
ctxsys.driimp.set_value('STOP_WORD','where');
ctxsys.driimp.set_value('STOP_WORD','whether');
ctxsys.driimp.set_value('STOP_WORD','which');
ctxsys.driimp.set_value('STOP_WORD','while');
ctxsys.driimp.set_value('STOP_WORD','who');
ctxsys.driimp.set_value('STOP_WORD','whose');
ctxsys.driimp.set_value('STOP_WORD','why');
ctxsys.driimp.set_value('STOP_WORD','will');
ctxsys.driimp.set_value('STOP_WORD','with');
ctxsys.driimp.set_value('STOP_WORD','would');
ctxsys.driimp.set_value('STOP_WORD','yet');
ctxsys.driimp.set_value('STOP_WORD','you');
ctxsys.driimp.set_value('STOP_WORD','your');
ctxsys.driimp.set_value('STOP_WORD','yours');
ctxsys.driimp.set_object('STORAGE','BASIC_STORAGE',2);
ctxsys.driimp.set_value('R_TABLE_CLAUSE','lob (data) store as (cache)');
ctxsys.driimp.set_value('I_INDEX_CLAUSE','compress 2');
commit;
COMMIT; 
END; 


CREATE INDEX "FULLTEXT_FULLTEXT_IDX" ON "FULLTEXT" ("FULLTEXT") 
   INDEXTYPE IS "CTXSYS"."CONTEXT" 


BEGIN 
ctxsys.driimp.create_index('FULL_01EDA94D_IDX','FULLTEXT',USER,
'ID','1','FULLTEXT_TITLE','112',
'0','23396','8130','23397',
NULL, NULL, NULL, 0,'TQY','ON COMMIT','12582912',NULL, NULL, NULL);
ctxsys.driimp.set_object('DATASTORE','DIRECT_DATASTORE',0);
ctxsys.driimp.set_object('DATATYPE','LOB_DATATYPE',0);
ctxsys.driimp.set_object('DATAX','SYNCH_DATAX',0);
ctxsys.driimp.set_object('FILTER','NULL_FILTER',0);
ctxsys.driimp.set_object('SECTION_GROUP','NULL_SECTION_GROUP',0);
ctxsys.driimp.set_object('LEXER','BASIC_LEXER',0);
ctxsys.driimp.set_object('WORDLIST','BASIC_WORDLIST',2);
ctxsys.driimp.set_value('STEMMER','1');
ctxsys.driimp.set_value('FUZZY_MATCH','1');
ctxsys.driimp.set_object('STOPLIST','BASIC_STOPLIST',114);
ctxsys.driimp.set_value('STOP_WORD','Mr');
ctxsys.driimp.set_value('STOP_WORD','Mrs');
ctxsys.driimp.set_value('STOP_WORD','Ms');
ctxsys.driimp.set_value('STOP_WORD','a');
ctxsys.driimp.set_value('STOP_WORD','all');
ctxsys.driimp.set_value('STOP_WORD','almost');
ctxsys.driimp.set_value('STOP_WORD','also');
ctxsys.driimp.set_value('STOP_WORD','although');
ctxsys.driimp.set_value('STOP_WORD','an');
ctxsys.driimp.set_value('STOP_WORD','and');
ctxsys.driimp.set_value('STOP_WORD','any');
ctxsys.driimp.set_value('STOP_WORD','are');
ctxsys.driimp.set_value('STOP_WORD','as');
ctxsys.driimp.set_value('STOP_WORD','at');
ctxsys.driimp.set_value('STOP_WORD','be');
ctxsys.driimp.set_value('STOP_WORD','because');
ctxsys.driimp.set_value('STOP_WORD','been');
ctxsys.driimp.set_value('STOP_WORD','both');
ctxsys.driimp.set_value('STOP_WORD','but');
ctxsys.driimp.set_value('STOP_WORD','by');
ctxsys.driimp.set_value('STOP_WORD','can');
ctxsys.driimp.set_value('STOP_WORD','could');
ctxsys.driimp.set_value('STOP_WORD','d');
ctxsys.driimp.set_value('STOP_WORD','did');
ctxsys.driimp.set_value('STOP_WORD','do');
ctxsys.driimp.set_value('STOP_WORD','does');
ctxsys.driimp.set_value('STOP_WORD','either');
ctxsys.driimp.set_value('STOP_WORD','for');
ctxsys.driimp.set_value('STOP_WORD','from');
ctxsys.driimp.set_value('STOP_WORD','had');
ctxsys.driimp.set_value('STOP_WORD','has');
ctxsys.driimp.set_value('STOP_WORD','have');
ctxsys.driimp.set_value('STOP_WORD','having');
ctxsys.driimp.set_value('STOP_WORD','he');
ctxsys.driimp.set_value('STOP_WORD','her');
ctxsys.driimp.set_value('STOP_WORD','here');
ctxsys.driimp.set_value('STOP_WORD','hers');
ctxsys.driimp.set_value('STOP_WORD','him');
ctxsys.driimp.set_value('STOP_WORD','his');
ctxsys.driimp.set_value('STOP_WORD','how');
ctxsys.driimp.set_value('STOP_WORD','however');
ctxsys.driimp.set_value('STOP_WORD','i');
ctxsys.driimp.set_value('STOP_WORD','if');
ctxsys.driimp.set_value('STOP_WORD','in');
ctxsys.driimp.set_value('STOP_WORD','into');
ctxsys.driimp.set_value('STOP_WORD','is');
ctxsys.driimp.set_value('STOP_WORD','it');
ctxsys.driimp.set_value('STOP_WORD','its');
ctxsys.driimp.set_value('STOP_WORD','just');
ctxsys.driimp.set_value('STOP_WORD','ll');
ctxsys.driimp.set_value('STOP_WORD','me');
ctxsys.driimp.set_value('STOP_WORD','might');
ctxsys.driimp.set_value('STOP_WORD','my');
ctxsys.driimp.set_value('STOP_WORD','no');
ctxsys.driimp.set_value('STOP_WORD','non');
ctxsys.driimp.set_value('STOP_WORD','nor');
ctxsys.driimp.set_value('STOP_WORD','not');
ctxsys.driimp.set_value('STOP_WORD','of');
ctxsys.driimp.set_value('STOP_WORD','on');
ctxsys.driimp.set_value('STOP_WORD','one');
ctxsys.driimp.set_value('STOP_WORD','only');
ctxsys.driimp.set_value('STOP_WORD','onto');
ctxsys.driimp.set_value('STOP_WORD','or');
ctxsys.driimp.set_value('STOP_WORD','our');
ctxsys.driimp.set_value('STOP_WORD','ours');
ctxsys.driimp.set_value('STOP_WORD','s');
ctxsys.driimp.set_value('STOP_WORD','shall');
ctxsys.driimp.set_value('STOP_WORD','she');
ctxsys.driimp.set_value('STOP_WORD','should');
ctxsys.driimp.set_value('STOP_WORD','since');
ctxsys.driimp.set_value('STOP_WORD','so');
ctxsys.driimp.set_value('STOP_WORD','some');
ctxsys.driimp.set_value('STOP_WORD','still');
ctxsys.driimp.set_value('STOP_WORD','such');
ctxsys.driimp.set_value('STOP_WORD','t');
ctxsys.driimp.set_value('STOP_WORD','than');
ctxsys.driimp.set_value('STOP_WORD','that');
ctxsys.driimp.set_value('STOP_WORD','the');
ctxsys.driimp.set_value('STOP_WORD','their');
ctxsys.driimp.set_value('STOP_WORD','them');
ctxsys.driimp.set_value('STOP_WORD','then');
ctxsys.driimp.set_value('STOP_WORD','there');
ctxsys.driimp.set_value('STOP_WORD','therefore');
ctxsys.driimp.set_value('STOP_WORD','these');
ctxsys.driimp.set_value('STOP_WORD','they');
ctxsys.driimp.set_value('STOP_WORD','this');
ctxsys.driimp.set_value('STOP_WORD','those');
ctxsys.driimp.set_value('STOP_WORD','though');
ctxsys.driimp.set_value('STOP_WORD','through');
ctxsys.driimp.set_value('STOP_WORD','thus');
ctxsys.driimp.set_value('STOP_WORD','to');
ctxsys.driimp.set_value('STOP_WORD','too');
ctxsys.driimp.set_value('STOP_WORD','until');
ctxsys.driimp.set_value('STOP_WORD','ve');
ctxsys.driimp.set_value('STOP_WORD','very');
ctxsys.driimp.set_value('STOP_WORD','was');
ctxsys.driimp.set_value('STOP_WORD','we');
ctxsys.driimp.set_value('STOP_WORD','were');
ctxsys.driimp.set_value('STOP_WORD','what');
ctxsys.driimp.set_value('STOP_WORD','when');
ctxsys.driimp.set_value('STOP_WORD','where');
ctxsys.driimp.set_value('STOP_WORD','whether');
ctxsys.driimp.set_value('STOP_WORD','which');
ctxsys.driimp.set_value('STOP_WORD','while');
ctxsys.driimp.set_value('STOP_WORD','who');
ctxsys.driimp.set_value('STOP_WORD','whose');
ctxsys.driimp.set_value('STOP_WORD','why');
ctxsys.driimp.set_value('STOP_WORD','will');
ctxsys.driimp.set_value('STOP_WORD','with');
ctxsys.driimp.set_value('STOP_WORD','would');
ctxsys.driimp.set_value('STOP_WORD','yet');
ctxsys.driimp.set_value('STOP_WORD','you');
ctxsys.driimp.set_value('STOP_WORD','your');
ctxsys.driimp.set_value('STOP_WORD','yours');
ctxsys.driimp.set_object('STORAGE','BASIC_STORAGE',2);
ctxsys.driimp.set_value('R_TABLE_CLAUSE','lob (data) store as (cache)');
ctxsys.driimp.set_value('I_INDEX_CLAUSE','compress 2');
commit;
COMMIT; 
END; 


CREATE INDEX "FULL_01EDA94D_IDX" ON "FULLTEXT" ("FULLTEXT_TITLE") 
   INDEXTYPE IS "CTXSYS"."CONTEXT" 


BEGIN 
ctxsys.driimp.create_index('FULL_8FEEFF02_IDX','FULLTEXT',USER,
'ID','1','FULLTEXT_DESCRIPTION','112',
'0','23396','8130','23397',
NULL, NULL, NULL, 0,'TQY','ON COMMIT','12582912',NULL, NULL, NULL);
ctxsys.driimp.set_object('DATASTORE','DIRECT_DATASTORE',0);
ctxsys.driimp.set_object('DATATYPE','LOB_DATATYPE',0);
ctxsys.driimp.set_object('DATAX','SYNCH_DATAX',0);
ctxsys.driimp.set_object('FILTER','NULL_FILTER',0);
ctxsys.driimp.set_object('SECTION_GROUP','NULL_SECTION_GROUP',0);
ctxsys.driimp.set_object('LEXER','BASIC_LEXER',0);
ctxsys.driimp.set_object('WORDLIST','BASIC_WORDLIST',2);
ctxsys.driimp.set_value('STEMMER','1');
ctxsys.driimp.set_value('FUZZY_MATCH','1');
ctxsys.driimp.set_object('STOPLIST','BASIC_STOPLIST',114);
ctxsys.driimp.set_value('STOP_WORD','Mr');
ctxsys.driimp.set_value('STOP_WORD','Mrs');
ctxsys.driimp.set_value('STOP_WORD','Ms');
ctxsys.driimp.set_value('STOP_WORD','a');
ctxsys.driimp.set_value('STOP_WORD','all');
ctxsys.driimp.set_value('STOP_WORD','almost');
ctxsys.driimp.set_value('STOP_WORD','also');
ctxsys.driimp.set_value('STOP_WORD','although');
ctxsys.driimp.set_value('STOP_WORD','an');
ctxsys.driimp.set_value('STOP_WORD','and');
ctxsys.driimp.set_value('STOP_WORD','any');
ctxsys.driimp.set_value('STOP_WORD','are');
ctxsys.driimp.set_value('STOP_WORD','as');
ctxsys.driimp.set_value('STOP_WORD','at');
ctxsys.driimp.set_value('STOP_WORD','be');
ctxsys.driimp.set_value('STOP_WORD','because');
ctxsys.driimp.set_value('STOP_WORD','been');
ctxsys.driimp.set_value('STOP_WORD','both');
ctxsys.driimp.set_value('STOP_WORD','but');
ctxsys.driimp.set_value('STOP_WORD','by');
ctxsys.driimp.set_value('STOP_WORD','can');
ctxsys.driimp.set_value('STOP_WORD','could');
ctxsys.driimp.set_value('STOP_WORD','d');
ctxsys.driimp.set_value('STOP_WORD','did');
ctxsys.driimp.set_value('STOP_WORD','do');
ctxsys.driimp.set_value('STOP_WORD','does');
ctxsys.driimp.set_value('STOP_WORD','either');
ctxsys.driimp.set_value('STOP_WORD','for');
ctxsys.driimp.set_value('STOP_WORD','from');
ctxsys.driimp.set_value('STOP_WORD','had');
ctxsys.driimp.set_value('STOP_WORD','has');
ctxsys.driimp.set_value('STOP_WORD','have');
ctxsys.driimp.set_value('STOP_WORD','having');
ctxsys.driimp.set_value('STOP_WORD','he');
ctxsys.driimp.set_value('STOP_WORD','her');
ctxsys.driimp.set_value('STOP_WORD','here');
ctxsys.driimp.set_value('STOP_WORD','hers');
ctxsys.driimp.set_value('STOP_WORD','him');
ctxsys.driimp.set_value('STOP_WORD','his');
ctxsys.driimp.set_value('STOP_WORD','how');
ctxsys.driimp.set_value('STOP_WORD','however');
ctxsys.driimp.set_value('STOP_WORD','i');
ctxsys.driimp.set_value('STOP_WORD','if');
ctxsys.driimp.set_value('STOP_WORD','in');
ctxsys.driimp.set_value('STOP_WORD','into');
ctxsys.driimp.set_value('STOP_WORD','is');
ctxsys.driimp.set_value('STOP_WORD','it');
ctxsys.driimp.set_value('STOP_WORD','its');
ctxsys.driimp.set_value('STOP_WORD','just');
ctxsys.driimp.set_value('STOP_WORD','ll');
ctxsys.driimp.set_value('STOP_WORD','me');
ctxsys.driimp.set_value('STOP_WORD','might');
ctxsys.driimp.set_value('STOP_WORD','my');
ctxsys.driimp.set_value('STOP_WORD','no');
ctxsys.driimp.set_value('STOP_WORD','non');
ctxsys.driimp.set_value('STOP_WORD','nor');
ctxsys.driimp.set_value('STOP_WORD','not');
ctxsys.driimp.set_value('STOP_WORD','of');
ctxsys.driimp.set_value('STOP_WORD','on');
ctxsys.driimp.set_value('STOP_WORD','one');
ctxsys.driimp.set_value('STOP_WORD','only');
ctxsys.driimp.set_value('STOP_WORD','onto');
ctxsys.driimp.set_value('STOP_WORD','or');
ctxsys.driimp.set_value('STOP_WORD','our');
ctxsys.driimp.set_value('STOP_WORD','ours');
ctxsys.driimp.set_value('STOP_WORD','s');
ctxsys.driimp.set_value('STOP_WORD','shall');
ctxsys.driimp.set_value('STOP_WORD','she');
ctxsys.driimp.set_value('STOP_WORD','should');
ctxsys.driimp.set_value('STOP_WORD','since');
ctxsys.driimp.set_value('STOP_WORD','so');
ctxsys.driimp.set_value('STOP_WORD','some');
ctxsys.driimp.set_value('STOP_WORD','still');
ctxsys.driimp.set_value('STOP_WORD','such');
ctxsys.driimp.set_value('STOP_WORD','t');
ctxsys.driimp.set_value('STOP_WORD','than');
ctxsys.driimp.set_value('STOP_WORD','that');
ctxsys.driimp.set_value('STOP_WORD','the');
ctxsys.driimp.set_value('STOP_WORD','their');
ctxsys.driimp.set_value('STOP_WORD','them');
ctxsys.driimp.set_value('STOP_WORD','then');
ctxsys.driimp.set_value('STOP_WORD','there');
ctxsys.driimp.set_value('STOP_WORD','therefore');
ctxsys.driimp.set_value('STOP_WORD','these');
ctxsys.driimp.set_value('STOP_WORD','they');
ctxsys.driimp.set_value('STOP_WORD','this');
ctxsys.driimp.set_value('STOP_WORD','those');
ctxsys.driimp.set_value('STOP_WORD','though');
ctxsys.driimp.set_value('STOP_WORD','through');
ctxsys.driimp.set_value('STOP_WORD','thus');
ctxsys.driimp.set_value('STOP_WORD','to');
ctxsys.driimp.set_value('STOP_WORD','too');
ctxsys.driimp.set_value('STOP_WORD','until');
ctxsys.driimp.set_value('STOP_WORD','ve');
ctxsys.driimp.set_value('STOP_WORD','very');
ctxsys.driimp.set_value('STOP_WORD','was');
ctxsys.driimp.set_value('STOP_WORD','we');
ctxsys.driimp.set_value('STOP_WORD','were');
ctxsys.driimp.set_value('STOP_WORD','what');
ctxsys.driimp.set_value('STOP_WORD','when');
ctxsys.driimp.set_value('STOP_WORD','where');
ctxsys.driimp.set_value('STOP_WORD','whether');
ctxsys.driimp.set_value('STOP_WORD','which');
ctxsys.driimp.set_value('STOP_WORD','while');
ctxsys.driimp.set_value('STOP_WORD','who');
ctxsys.driimp.set_value('STOP_WORD','whose');
ctxsys.driimp.set_value('STOP_WORD','why');
ctxsys.driimp.set_value('STOP_WORD','will');
ctxsys.driimp.set_value('STOP_WORD','with');
ctxsys.driimp.set_value('STOP_WORD','would');
ctxsys.driimp.set_value('STOP_WORD','yet');
ctxsys.driimp.set_value('STOP_WORD','you');
ctxsys.driimp.set_value('STOP_WORD','your');
ctxsys.driimp.set_value('STOP_WORD','yours');
ctxsys.driimp.set_object('STORAGE','BASIC_STORAGE',2);
ctxsys.driimp.set_value('R_TABLE_CLAUSE','lob (data) store as (cache)');
ctxsys.driimp.set_value('I_INDEX_CLAUSE','compress 2');
commit;
COMMIT; 
END; 


CREATE INDEX "FULL_8FEEFF02_IDX" ON "FULLTEXT" ("FULLTEXT_DESCRIPTION") 
   INDEXTYPE IS "CTXSYS"."CONTEXT" 


